{"version":3,"sources":["webpack:///./public/app/plugins/datasource/loki/types.ts","webpack:///./public/app/plugins/datasource/loki/query_utils.ts","webpack:///./public/app/plugins/datasource/loki/result_transformer.ts","webpack:///./node_modules/rxjs/_esm5/internal/observable/dom/WebSocketSubject.js","webpack:///./public/app/plugins/datasource/loki/live_streams.ts","webpack:///./node_modules/rxjs/_esm5/internal/observable/dom/webSocket.js","webpack:///./public/app/plugins/datasource/loki/syntax.ts","webpack:///./public/app/plugins/datasource/loki/language_provider.ts","webpack:///./public/app/plugins/datasource/loki/datasource.ts","webpack:///./public/app/plugins/datasource/loki/components/LokiCheatSheet.tsx","webpack:///./public/app/plugins/datasource/loki/components/LokiQueryField.tsx","webpack:///./public/app/plugins/datasource/loki/components/LokiExploreExtraField.tsx","webpack:///./public/app/plugins/datasource/loki/components/LokiExploreQueryEditor.tsx","webpack:///./public/app/plugins/datasource/loki/components/LokiQueryEditor.tsx","webpack:///./public/app/plugins/datasource/loki/LokiAnnotationsQueryCtrl.tsx","webpack:///./public/app/plugins/datasource/loki/configuration/MaxLinesField.tsx","webpack:///./public/app/plugins/datasource/loki/configuration/DerivedField.tsx","webpack:///./public/app/plugins/datasource/loki/configuration/DebugSection.tsx","webpack:///./public/app/plugins/datasource/loki/configuration/DerivedFields.tsx","webpack:///./public/app/plugins/datasource/loki/configuration/ConfigEditor.tsx","webpack:///./public/app/plugins/datasource/loki/module.ts","webpack:///./node_modules/crypt/crypt.js","webpack:///./node_modules/is-buffer/index.js","webpack:///./public/app/core/components/Select/DataSourcePicker.tsx","webpack:///./public/app/features/explore/utils/links.ts","webpack:///./node_modules/md5/md5.js","webpack:///./node_modules/lodash/escapeRegExp.js","webpack:///./node_modules/charenc/charenc.js","webpack:///./node_modules/react-use/esm/usePrevious.js"],"names":["LokiResultType","formatQuery","selector","trim","getHighlighterExpressionsFromQuery","input","expression","results","filterStart","search","filterOperator","substr","skip","filterEnd","filterTerm","quotedTerm","match","unwrappedFilterTerm","regexOperator","push","escapeRegExp","lokiStreamResultToDataFrame","stream","reverse","refId","labels","labelsString","Object","entries","map","key","val","sort","join","times","ArrayVector","timesNs","lines","uids","values","ts","line","add","Date","parseInt","length","toISOString","createUid","dataFrame","fields","name","type","FieldType","time","config","displayName","string","mutableDataFrame","MutableDataFrame","constructDataFrame","md5","lokiMatrixToTimeSeries","matrixResult","options","labelData","label","undefined","_","isEmpty","legendFormat","metricName","__name__","labelPart","getOriginalMetricName","aliasPattern","templateSrv","replace","scopedVars","aliasData","g1","query","createMetricLabel","metric","target","title","datapoints","lokiPointsToTimeseriesPoints","tags","meta","data","stepMs","step","baseTimestampMs","start","value","datapointValue","parseFloat","isNaN","timestamp","t","endTimestamp","end","lokiResultsToTableModel","lokiResults","resultCount","valueWithRefId","TableModel","sortedLabels","Set","reduce","acc","cur","concat","keys","table","columns","text","filterable","number","forEach","series","newSeries","rows","a","b","lokiStatsToMetaStat","stats","result","section","unit","test","capitalize","m","toLowerCase","lokiStreamsToDataframes","response","limit","custom","lokiQueryStatKey","searchWords","expr","preferredVisualisationType","enhanceDataFrame","derivedFields","derivedFieldsGrouped","groupBy","newFields","fieldFromDerivedFieldConfig","DataFrameView","row","field","logMatch","matcherRegex","derivedFieldConfigs","dataLinks","derivedFieldConfig","datasourceUid","url","internal","links","rangeQueryResponseToTimeSeries","responseListLength","transformerOptions","format","resultType","Vector","vecResult","Matrix","processRangeQueryResponse","Stream","of","Error","DEFAULT_WEBSOCKET_CONFIG","deserializer","e","JSON","parse","serializer","stringify","_super","WebSocketSubject","urlConfigOrSource","destination","_this","call","this","Observable","source","_config","_output","Subject","hasOwnProperty","WebSocketCtor","WebSocket","ReplaySubject","prototype","lift","operator","sock","_resetState","_socket","multiplex","subMsg","unsubMsg","messageFilter","self","observer","next","err","error","subscription","subscribe","x","complete","unsubscribe","_connectSocket","_a","protocol","binaryType","socket","Subscription","readyState","close","onopen","openObserver","queue","Subscriber","create","send","closingObserver","code","reason","TypeError","onerror","onclose","closeObserver","wasClean","onmessage","_subscribe","subscriber","observers","LiveStreams","streams","CircularDataFrame","capacity","size","addField","parseLabels","other","pipe","baseLabels","f","unique","findUniqueLabels","allLabelsString","tsNs","id","appendResponseToBufferedData","catchError","throwError","finalize","FUNCTIONS","insertText","documentation","detail","tokenizer","comment","pattern","lookbehind","inside","alias","punctuation","greedy","function","RegExp","DEFAULT_KEYS","wrapLabel","rangeToParams","range","from","to","LokiLanguageProvider","datasource","initialValues","seriesCache","LRU","labelsCache","cleanText","s","request","params","metadataRequest","console","startTask","fetchLogLabels","initialRange","then","started","getBeginningCompletionItems","context","suggestions","getEmptyCompletionItems","getTermCompletionItems","prefixMatch","items","suggestion","kind","fetchSeriesLabels","absoluteRange","rangeParams","cacheKey","generateCacheKey","get","set","processLabels","addLabelValuesToOptions","labelKey","logLabelOptions","keyOption","children","labelKeys","logLabelFetchTs","assign","syntax","wrapperClasses","prefix","emptyResult","empty","document","selectedLines","getTextsAtRange","selection","currentLine","first","getText","nextCharacter","anchor","offset","tokenRecognized","prefixUnrecognized","noSuffix","safePrefix","operatorsPattern","isNextOperand","includes","getRangeCompletionItems","getLabelCompletionItems","history","historyItems","chain","h","filter","uniq","take","item","cutoffTs","now","historyForItem","hint","recent","lastQueried","dateTime","fromNow","addHistoryMetadata","skipSort","RATE_RANGES","anchorBlock","cursorOffset","isValueStart","parsedSelector","parseSelector","allLabels","getLabelKeys","existingKeys","getLabelValues","labelValuesForKey","labelValues","getSeriesLabels","warn","possibleKeys","difference","newItems","newSuggestion","queries","datasourceType","Promise","all","importPrometheusQuery","rest","selectorMatch","selectorRegexp","labelRegexp","labelsToKeep","cleanSelector","lookupsDisabled","valueOf","res","slice","isLeaf","forceRefresh","param","roundTime","nanos","Math","floor","fetchLabelValues","LanguageProvider","RANGE_QUERY_ENDPOINT","INSTANT_QUERY_ENDPOINT","DEFAULT_QUERY_PARAMS","direction","lokiRegularEscape","lokiSpecialRegexEscape","LokiDatasource","instanceSettings","runInstantQuery","timeNs","getTime","min","maxDataPoints","Infinity","maxLines","_request","throwUnless","status","runRangeQuery","linesLimit","queryOptions","liveStreaming","runLiveQuery","createRangeQuery","switchMap","jsonData","liveTarget","createLiveTarget","getStream","state","LoadingState","Streaming","getLogRowContext","prepareLogRowContextQueryTarget","message","statusText","toPromise","commonTargetOptions","nsTimestamp","FieldCache","getFieldByName","rowIndex","timeEpochMs","languageProvider","settingsData","apiUrl","baseUrl","serializeParams","req","getBackendSrv","fetch","subQueries","filteredTargets","targets","hide","interpolateQueryExpr","app","CoreApp","Explore","Done","merge","startNs","endNs","rangeMs","ceil","adjustInterval","intervalMs","alignedTimes","convertToWebSocketUrl","expandedQueries","originMeta","importQueries","hideFromInspector","optionalOptions","resolve","interpolated","processMetricFindQuery","labelNamesRegex","labelValuesRegex","timeRange","getTimeSrv","labelNamesQuery","labelValuesQuery","variable","multi","includeAll","lodashMap","action","addLabelToQuery","date","roundUp","dateMath","startMs","annotation","interpolatedExpr","annotations","frame","apply","condition","processError","cloneDeep","interval","max","DataSourceApi","DEFAULT_EXAMPLES","PREFERRED_LABELS","LOGQL_EXAMPLES","LokiCheatSheet","userExamples","checkUserLabels","provider","props","preferredLabel","find","l","shuffle","setState","scheduleUserLabelChecking","clearTimeout","userLabelTimer","setTimeout","onClickExample","className","onClick","renderExpression","example","href","PureComponent","LokiQueryField","otherProps","absoluteTimeRange","useLokiSyntaxAndLabels","isSyntaxReady","setActiveOption","refreshLabels","LokiQueryFieldForm","onLoadOptions","onLabelsRefresh","syntaxLoaded","memo","onChangeFunc","onKeyDownFunc","width","placeholder","onChange","onKeyDown","onRunQuery","onChangeQueryLimit","preprocessMaxLines","NaN","onBlur","ExtraFieldElement","currentTarget","toString","LokiQueryEditor","onFieldChange","override","onLegendChange","tooltip","LokiAnnotationsQueryCtrl","onQueryChange","bind","templateUrl","FormField","LegacyForms","MaxLinesField","labelWidth","inputWidth","inputEl","event","spellCheck","Switch","getStyles","stylesFactory","css","nameField","regexField","DerivedField","onDelete","styles","useState","showInternalLink","setShowInternalLink","previousUid","usePrevious","useEffect","handleChange","variant","icon","preventDefault","newValue","checked","DataSourceSection","datasources","getDatasourceSrv","getExternal","ds","tracing","uid","selectedDatasource","d","DataSourcePicker","current","DebugSection","debugText","setDebugText","debugFields","testMatch","link","getFieldLinksForExplore","makeDebugFields","cx","DebugFields","theme","infoText","spacing","md","colors","textWeak","derivedField","sm","DerivedFields","useTheme","showDebug","setShowDebug","index","newField","newDerivedFields","splice","DataLinkBuiltInVars","valueRaw","origin","VariableOrigin","Value","makeJsonUpdater","setMaxLines","setDerivedFields","plugin","DataSourcePlugin","Datasource","setQueryEditor","setConfigEditor","onOptionsChange","defaultUrl","dataSourceConfig","showAccessOptions","setExploreQueryField","LokiExploreQueryEditor","setExploreStartPage","setAnnotationQueryCtrl","base64map","crypt","rotl","n","rotr","endian","constructor","Number","i","randomBytes","bytes","random","bytesToWords","words","wordsToBytes","bytesToHex","hex","hexToBytes","c","bytesToBase64","base64","triplet","j","charAt","base64ToBytes","imod4","indexOf","pow","module","exports","isBuffer","obj","readFloatLE","isSlowBuffer","_isBuffer","autoFocus","hideTextValue","openMenuOnFocus","showLoading","invalid","imgUrl","info","logos","small","loading","hideText","aria-label","selectors","components","container","isMulti","isClearable","backspaceRemovesValue","maxMenuHeight","menuPlacement","noOptionsMessage","defaultProps","splitOpenFn","raw","mapInternalLinkToExplore","onClickFn","replaceVariables","getTemplateSrv","getDataSourceSettingsByUid","getDataSourceSrv","linkModel","getLinkSrv","getDataLinkUIModel","parsedUrl","URL","hostname","_e","getTitleFromHref","utf8","bin","String","encoding","stringToBytes","Array","isArray","FF","_ff","GG","_gg","HH","_hh","II","_ii","aa","bb","cc","dd","_blocksize","_digestsize","digestbytes","asBytes","asString","bytesToString","reRegExpChar","reHasRegExpChar","charenc","str","unescape","encodeURIComponent","decodeURIComponent","escape","charCodeAt","fromCharCode","ref"],"mappings":"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","file":"lokiPlugin.4e20f99bf66682942589.js","sourcesContent":["import { DataQuery, DataSourceJsonData, QueryResultMeta, ScopedVars } from '@grafana/data';\n\nexport interface LokiInstantQueryRequest {\n  query: string;\n  limit?: number;\n  time?: string;\n  direction?: 'BACKWARD' | 'FORWARD';\n}\n\nexport interface LokiRangeQueryRequest {\n  query: string;\n  limit?: number;\n  start?: number;\n  end?: number;\n  step?: number;\n  direction?: 'BACKWARD' | 'FORWARD';\n}\n\nexport enum LokiResultType {\n  Stream = 'streams',\n  Vector = 'vector',\n  Matrix = 'matrix',\n}\n\nexport interface LokiQuery extends DataQuery {\n  expr: string;\n  query?: string;\n  format?: string;\n  reverse?: boolean;\n  legendFormat?: string;\n  valueWithRefId?: boolean;\n  maxLines?: number;\n}\n\nexport interface LokiOptions extends DataSourceJsonData {\n  maxLines?: string;\n  derivedFields?: DerivedFieldConfig[];\n}\n\nexport interface LokiStats {\n  [component: string]: {\n    [label: string]: number;\n  };\n}\n\nexport interface LokiVectorResult {\n  metric: { [label: string]: string };\n  value: [number, string];\n}\n\nexport interface LokiVectorResponse {\n  status: string;\n  data: {\n    resultType: LokiResultType.Vector;\n    result: LokiVectorResult[];\n    stats?: LokiStats;\n  };\n}\n\nexport interface LokiMatrixResult {\n  metric: Record<string, string>;\n  values: Array<[number, string]>;\n}\n\nexport interface LokiMatrixResponse {\n  status: string;\n  data: {\n    resultType: LokiResultType.Matrix;\n    result: LokiMatrixResult[];\n    stats?: LokiStats;\n  };\n}\n\nexport interface LokiStreamResult {\n  stream: Record<string, string>;\n  values: Array<[string, string]>;\n}\n\nexport interface LokiStreamResponse {\n  status: string;\n  data: {\n    resultType: LokiResultType.Stream;\n    result: LokiStreamResult[];\n    stats?: LokiStats;\n  };\n}\n\nexport interface LokiTailResponse {\n  streams: LokiStreamResult[];\n  dropped_entries?: Array<{\n    labels: Record<string, string>;\n    timestamp: string;\n  }> | null;\n}\n\nexport type LokiResult = LokiVectorResult | LokiMatrixResult | LokiStreamResult;\nexport type LokiResponse = LokiVectorResponse | LokiMatrixResponse | LokiStreamResponse;\n\nexport interface LokiLogsStreamEntry {\n  line: string;\n  ts: string;\n}\n\nexport interface LokiExpression {\n  regexp: string;\n  query: string;\n}\n\nexport type DerivedFieldConfig = {\n  matcherRegex: string;\n  name: string;\n  url?: string;\n  datasourceUid?: string;\n};\n\nexport interface TransformerOptions {\n  format?: string;\n  legendFormat?: string;\n  step: number;\n  start: number;\n  end: number;\n  query: string;\n  responseListLength: number;\n  refId: string;\n  scopedVars: ScopedVars;\n  meta?: QueryResultMeta;\n  valueWithRefId?: boolean;\n}\n","import escapeRegExp from 'lodash/escapeRegExp';\n\nexport function formatQuery(selector: string | undefined): string {\n  return `${selector || ''}`.trim();\n}\n\n/**\n * Returns search terms from a LogQL query.\n * E.g., `{} |= foo |=bar != baz` returns `['foo', 'bar']`.\n */\nexport function getHighlighterExpressionsFromQuery(input: string): string[] {\n  let expression = input;\n  const results = [];\n\n  // Consume filter expression from left to right\n  while (expression) {\n    const filterStart = expression.search(/\\|=|\\|~|!=|!~/);\n    // Nothing more to search\n    if (filterStart === -1) {\n      break;\n    }\n    // Drop terms for negative filters\n    const filterOperator = expression.substr(filterStart, 2);\n    const skip = expression.substr(filterStart).search(/!=|!~/) === 0;\n    expression = expression.substr(filterStart + 2);\n    if (skip) {\n      continue;\n    }\n    // Check if there is more chained\n    const filterEnd = expression.search(/\\|=|\\|~|!=|!~/);\n    let filterTerm;\n    if (filterEnd === -1) {\n      filterTerm = expression.trim();\n    } else {\n      filterTerm = expression.substr(0, filterEnd).trim();\n      expression = expression.substr(filterEnd);\n    }\n\n    // Unwrap the filter term by removing quotes\n    const quotedTerm = filterTerm.match(/^\"((?:[^\\\\\"]|\\\\\")*)\"$/);\n\n    if (quotedTerm) {\n      const unwrappedFilterTerm = quotedTerm[1];\n      const regexOperator = filterOperator === '|~';\n      results.push(regexOperator ? unwrappedFilterTerm : escapeRegExp(unwrappedFilterTerm));\n    } else {\n      return [];\n    }\n  }\n\n  return results;\n}\n","import _ from 'lodash';\nimport md5 from 'md5';\nimport { of } from 'rxjs';\n\nimport {\n  FieldType,\n  TimeSeries,\n  Labels,\n  DataFrame,\n  ArrayVector,\n  MutableDataFrame,\n  findUniqueLabels,\n  DataFrameView,\n  DataLink,\n  Field,\n  QueryResultMetaStat,\n  QueryResultMeta,\n  TimeSeriesValue,\n  ScopedVars,\n} from '@grafana/data';\n\nimport templateSrv from 'app/features/templating/template_srv';\nimport TableModel from 'app/core/table_model';\nimport { formatQuery, getHighlighterExpressionsFromQuery } from './query_utils';\nimport {\n  LokiRangeQueryRequest,\n  LokiResponse,\n  LokiMatrixResult,\n  LokiVectorResult,\n  TransformerOptions,\n  LokiResultType,\n  LokiStreamResult,\n  LokiTailResponse,\n  LokiQuery,\n  LokiOptions,\n  DerivedFieldConfig,\n  LokiStreamResponse,\n  LokiStats,\n} from './types';\n\n/**\n * Transforms LokiStreamResult structure into a dataFrame. Used when doing standard queries and newer version of Loki.\n */\nexport function lokiStreamResultToDataFrame(stream: LokiStreamResult, reverse?: boolean, refId?: string): DataFrame {\n  const labels: Labels = stream.stream;\n  const labelsString = Object.entries(labels)\n    .map(([key, val]) => `${key}=\"${val}\"`)\n    .sort()\n    .join('');\n\n  const times = new ArrayVector<string>([]);\n  const timesNs = new ArrayVector<string>([]);\n  const lines = new ArrayVector<string>([]);\n  const uids = new ArrayVector<string>([]);\n\n  for (const [ts, line] of stream.values) {\n    // num ns epoch in string, we convert it to iso string here so it matches old format\n    times.add(new Date(parseInt(ts.substr(0, ts.length - 6), 10)).toISOString());\n    timesNs.add(ts);\n    lines.add(line);\n    uids.add(createUid(ts, labelsString, line));\n  }\n\n  return constructDataFrame(times, timesNs, lines, uids, labels, reverse, refId);\n}\n\n/**\n * Constructs dataFrame with supplied fields and other data. Also makes sure it is properly reversed if needed.\n */\nfunction constructDataFrame(\n  times: ArrayVector<string>,\n  timesNs: ArrayVector<string>,\n  lines: ArrayVector<string>,\n  uids: ArrayVector<string>,\n  labels: Labels,\n  reverse?: boolean,\n  refId?: string\n) {\n  const dataFrame = {\n    refId,\n    fields: [\n      { name: 'ts', type: FieldType.time, config: { displayName: 'Time' }, values: times }, // Time\n      { name: 'line', type: FieldType.string, config: {}, values: lines, labels }, // Line - needs to be the first field with string type\n      { name: 'id', type: FieldType.string, config: {}, values: uids },\n      { name: 'tsNs', type: FieldType.time, config: { displayName: 'Time ns' }, values: timesNs }, // Time\n    ],\n    length: times.length,\n  };\n\n  if (reverse) {\n    const mutableDataFrame = new MutableDataFrame(dataFrame);\n    mutableDataFrame.reverse();\n    return mutableDataFrame;\n  }\n\n  return dataFrame;\n}\n\n/**\n * Transform LokiResponse data and appends it to MutableDataFrame. Used for streaming where the dataFrame can be\n * a CircularDataFrame creating a fixed size rolling buffer.\n * TODO: Probably could be unified with the logStreamToDataFrame function.\n * @param response\n * @param data Needs to have ts, line, labels, id as fields\n */\nexport function appendResponseToBufferedData(response: LokiTailResponse, data: MutableDataFrame) {\n  // Should we do anything with: response.dropped_entries?\n\n  const streams: LokiStreamResult[] = response.streams;\n  if (!streams || !streams.length) {\n    return;\n  }\n\n  let baseLabels: Labels = {};\n  for (const f of data.fields) {\n    if (f.type === FieldType.string) {\n      if (f.labels) {\n        baseLabels = f.labels;\n      }\n      break;\n    }\n  }\n\n  for (const stream of streams) {\n    // Find unique labels\n    const unique = findUniqueLabels(stream.stream, baseLabels);\n    const allLabelsString = Object.entries(stream.stream)\n      .map(([key, val]) => `${key}=\"${val}\"`)\n      .sort()\n      .join('');\n\n    // Add each line\n    for (const [ts, line] of stream.values) {\n      data.values.ts.add(new Date(parseInt(ts.substr(0, ts.length - 6), 10)).toISOString());\n      data.values.tsNs.add(ts);\n      data.values.line.add(line);\n      data.values.labels.add(unique);\n      data.values.id.add(createUid(ts, allLabelsString, line));\n    }\n  }\n}\n\nfunction createUid(ts: string, labelsString: string, line: string): string {\n  return md5(`${ts}_${labelsString}_${line}`);\n}\n\nfunction lokiMatrixToTimeSeries(matrixResult: LokiMatrixResult, options: TransformerOptions): TimeSeries {\n  const name = createMetricLabel(matrixResult.metric, options);\n  return {\n    target: name,\n    title: name,\n    datapoints: lokiPointsToTimeseriesPoints(matrixResult.values, options),\n    tags: matrixResult.metric,\n    meta: options.meta,\n    refId: options.refId,\n  };\n}\n\nfunction lokiPointsToTimeseriesPoints(data: Array<[number, string]>, options: TransformerOptions): TimeSeriesValue[][] {\n  const stepMs = options.step * 1000;\n  const datapoints: TimeSeriesValue[][] = [];\n\n  let baseTimestampMs = options.start / 1e6;\n  for (const [time, value] of data) {\n    let datapointValue: TimeSeriesValue = parseFloat(value);\n\n    if (isNaN(datapointValue)) {\n      datapointValue = null;\n    }\n\n    const timestamp = time * 1000;\n    for (let t = baseTimestampMs; t < timestamp; t += stepMs) {\n      datapoints.push([0, t]);\n    }\n\n    baseTimestampMs = timestamp + stepMs;\n    datapoints.push([datapointValue, timestamp]);\n  }\n\n  const endTimestamp = options.end / 1e6;\n  for (let t = baseTimestampMs; t <= endTimestamp; t += stepMs) {\n    datapoints.push([0, t]);\n  }\n\n  return datapoints;\n}\n\nexport function lokiResultsToTableModel(\n  lokiResults: Array<LokiMatrixResult | LokiVectorResult>,\n  resultCount: number,\n  refId: string,\n  meta: QueryResultMeta,\n  valueWithRefId?: boolean\n): TableModel {\n  if (!lokiResults || lokiResults.length === 0) {\n    return new TableModel();\n  }\n\n  // Collect all labels across all metrics\n  const metricLabels: Set<string> = new Set<string>(\n    lokiResults.reduce((acc, cur) => acc.concat(Object.keys(cur.metric)), [] as string[])\n  );\n\n  // Sort metric labels, create columns for them and record their index\n  const sortedLabels = [...metricLabels.values()].sort();\n  const table = new TableModel();\n  table.refId = refId;\n  table.meta = meta;\n  table.columns = [\n    { text: 'Time', type: FieldType.time },\n    ...sortedLabels.map(label => ({ text: label, filterable: true })),\n    { text: resultCount > 1 || valueWithRefId ? `Value #${refId}` : 'Value', type: FieldType.number },\n  ];\n\n  // Populate rows, set value to empty string when label not present.\n  lokiResults.forEach(series => {\n    const newSeries: LokiMatrixResult = {\n      metric: series.metric,\n      values: (series as LokiVectorResult).value\n        ? [(series as LokiVectorResult).value]\n        : (series as LokiMatrixResult).values,\n    };\n\n    if (!newSeries.values) {\n      return;\n    }\n\n    if (!newSeries.metric) {\n      table.rows.concat(newSeries.values.map(([a, b]) => [a * 1000, parseFloat(b)]));\n    } else {\n      table.rows.push(\n        ...newSeries.values.map(([a, b]) => [\n          a * 1000,\n          ...sortedLabels.map(label => newSeries.metric[label] || ''),\n          parseFloat(b),\n        ])\n      );\n    }\n  });\n\n  return table;\n}\n\nexport function createMetricLabel(labelData: { [key: string]: string }, options?: TransformerOptions) {\n  let label =\n    options === undefined || _.isEmpty(options.legendFormat)\n      ? getOriginalMetricName(labelData)\n      : renderTemplate(templateSrv.replace(options.legendFormat ?? '', options.scopedVars), labelData);\n\n  if (!label && options) {\n    label = options.query;\n  }\n  return label;\n}\n\nfunction renderTemplate(aliasPattern: string, aliasData: { [key: string]: string }) {\n  const aliasRegex = /\\{\\{\\s*(.+?)\\s*\\}\\}/g;\n  return aliasPattern.replace(aliasRegex, (_, g1) => (aliasData[g1] ? aliasData[g1] : g1));\n}\n\nfunction getOriginalMetricName(labelData: { [key: string]: string }) {\n  const metricName = labelData.__name__ || '';\n  delete labelData.__name__;\n  const labelPart = Object.entries(labelData)\n    .map(label => `${label[0]}=\"${label[1]}\"`)\n    .join(',');\n  return `${metricName}{${labelPart}}`;\n}\n\nexport function decamelize(s: string): string {\n  return s.replace(/[A-Z]/g, m => ` ${m.toLowerCase()}`);\n}\n\n// Turn loki stats { metric: value } into meta stat { title: metric, value: value }\nfunction lokiStatsToMetaStat(stats: LokiStats | undefined): QueryResultMetaStat[] {\n  const result: QueryResultMetaStat[] = [];\n\n  if (!stats) {\n    return result;\n  }\n\n  for (const section in stats) {\n    const values = stats[section];\n    for (const label in values) {\n      const value = values[label];\n      let unit;\n      if (/time/i.test(label) && value) {\n        unit = 's';\n      } else if (/bytes.*persecond/i.test(label)) {\n        unit = 'Bps';\n      } else if (/bytes/i.test(label)) {\n        unit = 'decbytes';\n      }\n      const title = `${_.capitalize(section)}: ${decamelize(label)}`;\n      result.push({ displayName: title, value, unit });\n    }\n  }\n\n  return result;\n}\n\nexport function lokiStreamsToDataframes(\n  response: LokiStreamResponse,\n  target: { refId: string; expr?: string },\n  limit: number,\n  config: LokiOptions,\n  reverse = false\n): DataFrame[] {\n  const data = limit > 0 ? response.data.result : [];\n  const stats: QueryResultMetaStat[] = lokiStatsToMetaStat(response.data.stats);\n  // Use custom mechanism to identify which stat we want to promote to label\n  const custom = {\n    lokiQueryStatKey: 'Summary: total bytes processed',\n  };\n\n  const meta: QueryResultMeta = {\n    searchWords: getHighlighterExpressionsFromQuery(formatQuery(target.expr)),\n    limit,\n    stats,\n    custom,\n    preferredVisualisationType: 'logs',\n  };\n\n  const series: DataFrame[] = data.map(stream => {\n    const dataFrame = lokiStreamResultToDataFrame(stream, reverse);\n    enhanceDataFrame(dataFrame, config);\n\n    return {\n      ...dataFrame,\n      refId: target.refId,\n      meta,\n    };\n  });\n\n  if (stats.length && !data.length) {\n    return [\n      {\n        fields: [],\n        length: 0,\n        refId: target.refId,\n        meta,\n      },\n    ];\n  }\n\n  return series;\n}\n\n/**\n * Adds new fields and DataLinks to DataFrame based on DataSource instance config.\n */\nexport const enhanceDataFrame = (dataFrame: DataFrame, config: LokiOptions | null): void => {\n  if (!config) {\n    return;\n  }\n\n  const derivedFields = config.derivedFields ?? [];\n  if (!derivedFields.length) {\n    return;\n  }\n  const derivedFieldsGrouped = _.groupBy(derivedFields, 'name');\n\n  const newFields = Object.values(derivedFieldsGrouped).map(fieldFromDerivedFieldConfig);\n\n  const view = new DataFrameView(dataFrame);\n  view.forEach((row: { line: string }) => {\n    for (const field of newFields) {\n      const logMatch = row.line.match(derivedFieldsGrouped[field.name][0].matcherRegex);\n      field.values.add(logMatch && logMatch[1]);\n    }\n  });\n\n  dataFrame.fields = [...dataFrame.fields, ...newFields];\n};\n\n/**\n * Transform derivedField config into dataframe field with config that contains link.\n */\nfunction fieldFromDerivedFieldConfig(derivedFieldConfigs: DerivedFieldConfig[]): Field<any, ArrayVector> {\n  const dataLinks = derivedFieldConfigs.reduce((acc, derivedFieldConfig) => {\n    // Having field.datasourceUid means it is an internal link.\n    if (derivedFieldConfig.datasourceUid) {\n      acc.push({\n        // Will be filled out later\n        title: '',\n        url: '',\n        // This is hardcoded for Jaeger or Zipkin not way right now to specify datasource specific query object\n        internal: {\n          query: { query: derivedFieldConfig.url },\n          datasourceUid: derivedFieldConfig.datasourceUid,\n        },\n      });\n    } else if (derivedFieldConfig.url) {\n      acc.push({\n        // We do not know what title to give here so we count on presentation layer to create a title from metadata.\n        title: '',\n        // This is hardcoded for Jaeger or Zipkin not way right now to specify datasource specific query object\n        url: derivedFieldConfig.url,\n      });\n    }\n    return acc;\n  }, [] as DataLink[]);\n\n  return {\n    name: derivedFieldConfigs[0].name,\n    type: FieldType.string,\n    config: {\n      links: dataLinks,\n    },\n    // We are adding values later on\n    values: new ArrayVector<string>([]),\n  };\n}\n\nexport function rangeQueryResponseToTimeSeries(\n  response: LokiResponse,\n  query: LokiRangeQueryRequest,\n  target: LokiQuery,\n  responseListLength: number,\n  scopedVars: ScopedVars\n): TimeSeries[] {\n  /** Show results of Loki metric queries only in graph */\n  const meta: QueryResultMeta = {\n    preferredVisualisationType: 'graph',\n  };\n  const transformerOptions: TransformerOptions = {\n    format: target.format,\n    legendFormat: target.legendFormat ?? '',\n    start: query.start!,\n    end: query.end!,\n    step: query.step!,\n    query: query.query,\n    responseListLength,\n    refId: target.refId,\n    meta,\n    valueWithRefId: target.valueWithRefId,\n    scopedVars,\n  };\n\n  switch (response.data.resultType) {\n    case LokiResultType.Vector:\n      return response.data.result.map(vecResult =>\n        lokiMatrixToTimeSeries({ metric: vecResult.metric, values: [vecResult.value] }, transformerOptions)\n      );\n    case LokiResultType.Matrix:\n      return response.data.result.map(matrixResult => lokiMatrixToTimeSeries(matrixResult, transformerOptions));\n    default:\n      return [];\n  }\n}\n\nexport function processRangeQueryResponse(\n  response: LokiResponse,\n  target: LokiQuery,\n  query: LokiRangeQueryRequest,\n  responseListLength: number,\n  limit: number,\n  config: LokiOptions,\n  scopedVars: ScopedVars,\n  reverse = false\n) {\n  switch (response.data.resultType) {\n    case LokiResultType.Stream:\n      return of({\n        data: lokiStreamsToDataframes(response as LokiStreamResponse, target, limit, config, reverse),\n        key: `${target.refId}_log`,\n      });\n\n    case LokiResultType.Vector:\n    case LokiResultType.Matrix:\n      return of({\n        data: rangeQueryResponseToTimeSeries(\n          response,\n          query,\n          {\n            ...target,\n            format: 'time_series',\n          },\n          responseListLength,\n          scopedVars\n        ),\n        key: target.refId,\n      });\n    default:\n      throw new Error(`Unknown result type \"${(response.data as any).resultType}\".`);\n  }\n}\n","/** PURE_IMPORTS_START tslib,_.._Subject,_.._Subscriber,_.._Observable,_.._Subscription,_.._ReplaySubject PURE_IMPORTS_END */\nimport * as tslib_1 from \"tslib\";\nimport { Subject, AnonymousSubject } from '../../Subject';\nimport { Subscriber } from '../../Subscriber';\nimport { Observable } from '../../Observable';\nimport { Subscription } from '../../Subscription';\nimport { ReplaySubject } from '../../ReplaySubject';\nvar DEFAULT_WEBSOCKET_CONFIG = {\n    url: '',\n    deserializer: function (e) { return JSON.parse(e.data); },\n    serializer: function (value) { return JSON.stringify(value); },\n};\nvar WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT = 'WebSocketSubject.error must be called with an object with an error code, and an optional reason: { code: number, reason: string }';\nvar WebSocketSubject = /*@__PURE__*/ (function (_super) {\n    tslib_1.__extends(WebSocketSubject, _super);\n    function WebSocketSubject(urlConfigOrSource, destination) {\n        var _this = _super.call(this) || this;\n        if (urlConfigOrSource instanceof Observable) {\n            _this.destination = destination;\n            _this.source = urlConfigOrSource;\n        }\n        else {\n            var config = _this._config = tslib_1.__assign({}, DEFAULT_WEBSOCKET_CONFIG);\n            _this._output = new Subject();\n            if (typeof urlConfigOrSource === 'string') {\n                config.url = urlConfigOrSource;\n            }\n            else {\n                for (var key in urlConfigOrSource) {\n                    if (urlConfigOrSource.hasOwnProperty(key)) {\n                        config[key] = urlConfigOrSource[key];\n                    }\n                }\n            }\n            if (!config.WebSocketCtor && WebSocket) {\n                config.WebSocketCtor = WebSocket;\n            }\n            else if (!config.WebSocketCtor) {\n                throw new Error('no WebSocket constructor can be found');\n            }\n            _this.destination = new ReplaySubject();\n        }\n        return _this;\n    }\n    WebSocketSubject.prototype.lift = function (operator) {\n        var sock = new WebSocketSubject(this._config, this.destination);\n        sock.operator = operator;\n        sock.source = this;\n        return sock;\n    };\n    WebSocketSubject.prototype._resetState = function () {\n        this._socket = null;\n        if (!this.source) {\n            this.destination = new ReplaySubject();\n        }\n        this._output = new Subject();\n    };\n    WebSocketSubject.prototype.multiplex = function (subMsg, unsubMsg, messageFilter) {\n        var self = this;\n        return new Observable(function (observer) {\n            try {\n                self.next(subMsg());\n            }\n            catch (err) {\n                observer.error(err);\n            }\n            var subscription = self.subscribe(function (x) {\n                try {\n                    if (messageFilter(x)) {\n                        observer.next(x);\n                    }\n                }\n                catch (err) {\n                    observer.error(err);\n                }\n            }, function (err) { return observer.error(err); }, function () { return observer.complete(); });\n            return function () {\n                try {\n                    self.next(unsubMsg());\n                }\n                catch (err) {\n                    observer.error(err);\n                }\n                subscription.unsubscribe();\n            };\n        });\n    };\n    WebSocketSubject.prototype._connectSocket = function () {\n        var _this = this;\n        var _a = this._config, WebSocketCtor = _a.WebSocketCtor, protocol = _a.protocol, url = _a.url, binaryType = _a.binaryType;\n        var observer = this._output;\n        var socket = null;\n        try {\n            socket = protocol ?\n                new WebSocketCtor(url, protocol) :\n                new WebSocketCtor(url);\n            this._socket = socket;\n            if (binaryType) {\n                this._socket.binaryType = binaryType;\n            }\n        }\n        catch (e) {\n            observer.error(e);\n            return;\n        }\n        var subscription = new Subscription(function () {\n            _this._socket = null;\n            if (socket && socket.readyState === 1) {\n                socket.close();\n            }\n        });\n        socket.onopen = function (e) {\n            var _socket = _this._socket;\n            if (!_socket) {\n                socket.close();\n                _this._resetState();\n                return;\n            }\n            var openObserver = _this._config.openObserver;\n            if (openObserver) {\n                openObserver.next(e);\n            }\n            var queue = _this.destination;\n            _this.destination = Subscriber.create(function (x) {\n                if (socket.readyState === 1) {\n                    try {\n                        var serializer = _this._config.serializer;\n                        socket.send(serializer(x));\n                    }\n                    catch (e) {\n                        _this.destination.error(e);\n                    }\n                }\n            }, function (e) {\n                var closingObserver = _this._config.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                if (e && e.code) {\n                    socket.close(e.code, e.reason);\n                }\n                else {\n                    observer.error(new TypeError(WEBSOCKETSUBJECT_INVALID_ERROR_OBJECT));\n                }\n                _this._resetState();\n            }, function () {\n                var closingObserver = _this._config.closingObserver;\n                if (closingObserver) {\n                    closingObserver.next(undefined);\n                }\n                socket.close();\n                _this._resetState();\n            });\n            if (queue && queue instanceof ReplaySubject) {\n                subscription.add(queue.subscribe(_this.destination));\n            }\n        };\n        socket.onerror = function (e) {\n            _this._resetState();\n            observer.error(e);\n        };\n        socket.onclose = function (e) {\n            _this._resetState();\n            var closeObserver = _this._config.closeObserver;\n            if (closeObserver) {\n                closeObserver.next(e);\n            }\n            if (e.wasClean) {\n                observer.complete();\n            }\n            else {\n                observer.error(e);\n            }\n        };\n        socket.onmessage = function (e) {\n            try {\n                var deserializer = _this._config.deserializer;\n                observer.next(deserializer(e));\n            }\n            catch (err) {\n                observer.error(err);\n            }\n        };\n    };\n    WebSocketSubject.prototype._subscribe = function (subscriber) {\n        var _this = this;\n        var source = this.source;\n        if (source) {\n            return source.subscribe(subscriber);\n        }\n        if (!this._socket) {\n            this._connectSocket();\n        }\n        this._output.subscribe(subscriber);\n        subscriber.add(function () {\n            var _socket = _this._socket;\n            if (_this._output.observers.length === 0) {\n                if (_socket && _socket.readyState === 1) {\n                    _socket.close();\n                }\n                _this._resetState();\n            }\n        });\n        return subscriber;\n    };\n    WebSocketSubject.prototype.unsubscribe = function () {\n        var _socket = this._socket;\n        if (_socket && _socket.readyState === 1) {\n            _socket.close();\n        }\n        this._resetState();\n        _super.prototype.unsubscribe.call(this);\n    };\n    return WebSocketSubject;\n}(AnonymousSubject));\nexport { WebSocketSubject };\n//# sourceMappingURL=WebSocketSubject.js.map\n","import { DataFrame, FieldType, parseLabels, KeyValue, CircularDataFrame } from '@grafana/data';\nimport { Observable, throwError } from 'rxjs';\nimport { webSocket } from 'rxjs/webSocket';\nimport { LokiTailResponse } from './types';\nimport { finalize, map, catchError } from 'rxjs/operators';\nimport { appendResponseToBufferedData } from './result_transformer';\n\n/**\n * Maps directly to a query in the UI (refId is key)\n */\nexport interface LokiLiveTarget {\n  query: string;\n  url: string;\n  refId: string;\n  size: number;\n}\n\n/**\n * Cache of websocket streams that can be returned as observable. In case there already is a stream for particular\n * target it is returned and on subscription returns the latest dataFrame.\n */\nexport class LiveStreams {\n  private streams: KeyValue<Observable<DataFrame[]>> = {};\n\n  getStream(target: LokiLiveTarget): Observable<DataFrame[]> {\n    let stream = this.streams[target.url];\n\n    if (stream) {\n      return stream;\n    }\n\n    const data = new CircularDataFrame({ capacity: target.size });\n    data.addField({ name: 'ts', type: FieldType.time, config: { displayName: 'Time' } });\n    data.addField({ name: 'tsNs', type: FieldType.time, config: { displayName: 'Time ns' } });\n    data.addField({ name: 'line', type: FieldType.string }).labels = parseLabels(target.query);\n    data.addField({ name: 'labels', type: FieldType.other }); // The labels for each line\n    data.addField({ name: 'id', type: FieldType.string });\n    data.meta = { ...data.meta, preferredVisualisationType: 'logs' };\n\n    stream = webSocket(target.url).pipe(\n      map((response: LokiTailResponse) => {\n        appendResponseToBufferedData(response, data);\n        return [data];\n      }),\n      catchError(err => {\n        return throwError(`error: ${err.reason}`);\n      }),\n      finalize(() => {\n        delete this.streams[target.url];\n      })\n    );\n    this.streams[target.url] = stream;\n\n    return stream;\n  }\n}\n","/** PURE_IMPORTS_START _WebSocketSubject PURE_IMPORTS_END */\nimport { WebSocketSubject } from './WebSocketSubject';\nexport function webSocket(urlConfigOrSource) {\n    return new WebSocketSubject(urlConfigOrSource);\n}\n//# sourceMappingURL=webSocket.js.map\n","import { Grammar } from 'prismjs';\nimport { CompletionItem } from '@grafana/ui';\n\nconst AGGREGATION_OPERATORS: CompletionItem[] = [\n  {\n    label: 'sum',\n    insertText: 'sum',\n    documentation: 'Calculate sum over dimensions',\n  },\n  {\n    label: 'min',\n    insertText: 'min',\n    documentation: 'Select minimum over dimensions',\n  },\n  {\n    label: 'max',\n    insertText: 'max',\n    documentation: 'Select maximum over dimensions',\n  },\n  {\n    label: 'avg',\n    insertText: 'avg',\n    documentation: 'Calculate the average over dimensions',\n  },\n  {\n    label: 'stddev',\n    insertText: 'stddev',\n    documentation: 'Calculate population standard deviation over dimensions',\n  },\n  {\n    label: 'stdvar',\n    insertText: 'stdvar',\n    documentation: 'Calculate population standard variance over dimensions',\n  },\n  {\n    label: 'count',\n    insertText: 'count',\n    documentation: 'Count number of elements in the vector',\n  },\n  {\n    label: 'bottomk',\n    insertText: 'bottomk',\n    documentation: 'Smallest k elements by sample value',\n  },\n  {\n    label: 'topk',\n    insertText: 'topk',\n    documentation: 'Largest k elements by sample value',\n  },\n];\n\nexport const RANGE_VEC_FUNCTIONS = [\n  {\n    insertText: 'count_over_time',\n    label: 'count_over_time',\n    detail: 'count_over_time(range-vector)',\n    documentation: 'The count of all values in the specified interval.',\n  },\n  {\n    insertText: 'rate',\n    label: 'rate',\n    detail: 'rate(v range-vector)',\n    documentation:\n      \"Calculates the per-second average rate of increase of the time series in the range vector. Breaks in monotonicity (such as counter resets due to target restarts) are automatically adjusted for. Also, the calculation extrapolates to the ends of the time range, allowing for missed scrapes or imperfect alignment of scrape cycles with the range's time period.\",\n  },\n];\n\nexport const FUNCTIONS = [...AGGREGATION_OPERATORS, ...RANGE_VEC_FUNCTIONS];\n\nconst tokenizer: Grammar = {\n  comment: {\n    pattern: /#.*/,\n  },\n  'context-aggregation': {\n    pattern: /((without|by)\\s*)\\([^)]*\\)/, // by ()\n    lookbehind: true,\n    inside: {\n      'label-key': {\n        pattern: /[^(),\\s][^,)]*[^),\\s]*/,\n        alias: 'attr-name',\n      },\n      punctuation: /[()]/,\n    },\n  },\n  'context-labels': {\n    pattern: /\\{[^}]*(?=})/,\n    greedy: true,\n    inside: {\n      comment: {\n        pattern: /#.*/,\n      },\n      'label-key': {\n        pattern: /[a-z_]\\w*(?=\\s*(=|!=|=~|!~))/,\n        alias: 'attr-name',\n        greedy: true,\n      },\n      'label-value': {\n        pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n        greedy: true,\n        alias: 'attr-value',\n      },\n      punctuation: /[{]/,\n    },\n  },\n  function: new RegExp(`\\\\b(?:${FUNCTIONS.map(f => f.label).join('|')})(?=\\\\s*\\\\()`, 'i'),\n  'context-range': [\n    {\n      pattern: /\\[[^\\]]*(?=\\])/, // [1m]\n      inside: {\n        'range-duration': {\n          pattern: /\\b\\d+[smhdwy]\\b/i,\n          alias: 'number',\n        },\n      },\n    },\n    {\n      pattern: /(offset\\s+)\\w+/, // offset 1m\n      lookbehind: true,\n      inside: {\n        'range-duration': {\n          pattern: /\\b\\d+[smhdwy]\\b/i,\n          alias: 'number',\n        },\n      },\n    },\n  ],\n  number: /\\b-?\\d+((\\.\\d*)?([eE][+-]?\\d+)?)?\\b/,\n  operator: new RegExp(`/&&?|\\\\|?\\\\||!=?|<(?:=>?|<|>)?|>[>=]?`, 'i'),\n  punctuation: /[{}()`,.]/,\n};\n\nexport default tokenizer;\n","// Libraries\nimport _ from 'lodash';\nimport LRU from 'lru-cache';\n\n// Services & Utils\nimport {\n  parseSelector,\n  labelRegexp,\n  selectorRegexp,\n  processLabels,\n} from 'app/plugins/datasource/prometheus/language_utils';\nimport syntax, { FUNCTIONS } from './syntax';\n\n// Types\nimport { LokiQuery } from './types';\nimport { dateTime, AbsoluteTimeRange, LanguageProvider, HistoryItem } from '@grafana/data';\nimport { PromQuery } from '../prometheus/types';\nimport { RATE_RANGES } from '../prometheus/promql';\n\nimport LokiDatasource from './datasource';\nimport { CompletionItem, TypeaheadInput, TypeaheadOutput, CompletionItemGroup } from '@grafana/ui';\nimport { Grammar } from 'prismjs';\n\nconst DEFAULT_KEYS = ['job', 'namespace'];\nconst EMPTY_SELECTOR = '{}';\nconst HISTORY_ITEM_COUNT = 10;\nconst HISTORY_COUNT_CUTOFF = 1000 * 60 * 60 * 24; // 24h\nconst NS_IN_MS = 1000000;\nexport const LABEL_REFRESH_INTERVAL = 1000 * 30; // 30sec\n\nconst wrapLabel = (label: string) => ({ label });\nexport const rangeToParams = (range: AbsoluteTimeRange) => ({ start: range.from * NS_IN_MS, end: range.to * NS_IN_MS });\n\nexport type LokiHistoryItem = HistoryItem<LokiQuery>;\n\ntype TypeaheadContext = {\n  history?: LokiHistoryItem[];\n  absoluteRange?: AbsoluteTimeRange;\n};\n\nexport function addHistoryMetadata(item: CompletionItem, history: LokiHistoryItem[]): CompletionItem {\n  const cutoffTs = Date.now() - HISTORY_COUNT_CUTOFF;\n  const historyForItem = history.filter(h => h.ts > cutoffTs && h.query.expr === item.label);\n  let hint = `Queried ${historyForItem.length} times in the last 24h.`;\n  const recent = historyForItem[0];\n\n  if (recent) {\n    const lastQueried = dateTime(recent.ts).fromNow();\n    hint = `${hint} Last queried ${lastQueried}.`;\n  }\n\n  return {\n    ...item,\n    documentation: hint,\n  };\n}\n\nexport default class LokiLanguageProvider extends LanguageProvider {\n  labelKeys: string[];\n  logLabelOptions: any[];\n  logLabelFetchTs: number;\n  started: boolean;\n  initialRange: AbsoluteTimeRange;\n  datasource: LokiDatasource;\n  lookupsDisabled: boolean; // Dynamically set to true for big/slow instances\n\n  /**\n   *  Cache for labels of series. This is bit simplistic in the sense that it just counts responses each as a 1 and does\n   *  not account for different size of a response. If that is needed a `length` function can be added in the options.\n   *  10 as a max size is totally arbitrary right now.\n   */\n  private seriesCache = new LRU<string, Record<string, string[]>>(10);\n  private labelsCache = new LRU<string, string[]>(10);\n\n  constructor(datasource: LokiDatasource, initialValues?: any) {\n    super();\n\n    this.datasource = datasource;\n    this.labelKeys = [];\n    this.logLabelFetchTs = 0;\n\n    Object.assign(this, initialValues);\n  }\n\n  // Strip syntax chars\n  cleanText = (s: string) => s.replace(/[{}[\\]=\"(),!~+\\-*/^%]/g, '').trim();\n\n  getSyntax(): Grammar {\n    return syntax;\n  }\n\n  request = async (url: string, params?: any): Promise<any> => {\n    try {\n      return await this.datasource.metadataRequest(url, params);\n    } catch (error) {\n      console.error(error);\n    }\n\n    return undefined;\n  };\n\n  /**\n   * Initialise the language provider by fetching set of labels. Without this initialisation the provider would return\n   * just a set of hardcoded default labels on provideCompletionItems or a recent queries from history.\n   */\n  start = () => {\n    if (!this.startTask) {\n      this.startTask = this.fetchLogLabels(this.initialRange).then(() => {\n        this.started = true;\n        return [];\n      });\n    }\n\n    return this.startTask;\n  };\n\n  getLabelKeys(): string[] {\n    return this.labelKeys;\n  }\n\n  /**\n   * Return suggestions based on input that can be then plugged into a typeahead dropdown.\n   * Keep this DOM-free for testing\n   * @param input\n   * @param context Is optional in types but is required in case we are doing getLabelCompletionItems\n   * @param context.absoluteRange Required in case we are doing getLabelCompletionItems\n   * @param context.history Optional used only in getEmptyCompletionItems\n   */\n  async provideCompletionItems(input: TypeaheadInput, context?: TypeaheadContext): Promise<TypeaheadOutput> {\n    const { wrapperClasses, value, prefix, text } = input;\n    const emptyResult: TypeaheadOutput = { suggestions: [] };\n\n    if (!value) {\n      return emptyResult;\n    }\n\n    // Local text properties\n    const empty = value?.document.text.length === 0;\n    const selectedLines = value.document.getTextsAtRange(value.selection);\n    const currentLine = selectedLines.size === 1 ? selectedLines.first().getText() : null;\n\n    const nextCharacter = currentLine ? currentLine[value.selection.anchor.offset] : null;\n\n    // Syntax spans have 3 classes by default. More indicate a recognized token\n    const tokenRecognized = wrapperClasses.length > 3;\n\n    // Non-empty prefix, but not inside known token\n    const prefixUnrecognized = prefix && !tokenRecognized;\n\n    // Prevent suggestions in `function(|suffix)`\n    const noSuffix = !nextCharacter || nextCharacter === ')';\n\n    // Prefix is safe if it does not immediately follow a complete expression and has no text after it\n    const safePrefix = prefix && !text.match(/^['\"~=\\]})\\s]+$/) && noSuffix;\n\n    // About to type next operand if preceded by binary operator\n    const operatorsPattern = /[+\\-*/^%]/;\n    const isNextOperand = text.match(operatorsPattern);\n\n    // Determine candidates by CSS context\n    if (wrapperClasses.includes('context-range')) {\n      // Suggestions for metric[|]\n      return this.getRangeCompletionItems();\n    } else if (wrapperClasses.includes('context-labels')) {\n      // Suggestions for {|} and {foo=|}\n      return await this.getLabelCompletionItems(input, context);\n    } else if (empty) {\n      // Suggestions for empty query field\n      return this.getEmptyCompletionItems(context);\n    } else if (prefixUnrecognized && noSuffix && !isNextOperand) {\n      // Show term suggestions in a couple of scenarios\n      return this.getBeginningCompletionItems(context);\n    } else if (prefixUnrecognized && safePrefix) {\n      // Show term suggestions in a couple of scenarios\n      return this.getTermCompletionItems();\n    }\n\n    return emptyResult;\n  }\n\n  getBeginningCompletionItems = (context?: TypeaheadContext): TypeaheadOutput => {\n    return {\n      suggestions: [...this.getEmptyCompletionItems(context).suggestions, ...this.getTermCompletionItems().suggestions],\n    };\n  };\n\n  getEmptyCompletionItems(context?: TypeaheadContext): TypeaheadOutput {\n    const history = context?.history;\n    const suggestions = [];\n\n    if (history && history.length) {\n      const historyItems = _.chain(history)\n        .map(h => h.query.expr)\n        .filter()\n        .uniq()\n        .take(HISTORY_ITEM_COUNT)\n        .map(wrapLabel)\n        .map((item: CompletionItem) => addHistoryMetadata(item, history))\n        .value();\n\n      suggestions.push({\n        prefixMatch: true,\n        skipSort: true,\n        label: 'History',\n        items: historyItems,\n      });\n    }\n\n    return { suggestions };\n  }\n\n  getTermCompletionItems = (): TypeaheadOutput => {\n    const suggestions = [];\n\n    suggestions.push({\n      prefixMatch: true,\n      label: 'Functions',\n      items: FUNCTIONS.map(suggestion => ({ ...suggestion, kind: 'function' })),\n    });\n\n    return { suggestions };\n  };\n\n  getRangeCompletionItems(): TypeaheadOutput {\n    return {\n      context: 'context-range',\n      suggestions: [\n        {\n          label: 'Range vector',\n          items: [...RATE_RANGES],\n        },\n      ],\n    };\n  }\n\n  async getLabelCompletionItems(\n    { text, wrapperClasses, labelKey, value }: TypeaheadInput,\n    { absoluteRange }: any\n  ): Promise<TypeaheadOutput> {\n    let context = 'context-labels';\n    const suggestions: CompletionItemGroup[] = [];\n    if (!value) {\n      return { context, suggestions: [] };\n    }\n    const line = value.anchorBlock.getText();\n    const cursorOffset = value.selection.anchor.offset;\n    const isValueStart = text.match(/^(=|=~|!=|!~)/);\n\n    // Get normalized selector\n    let selector;\n    let parsedSelector;\n    try {\n      parsedSelector = parseSelector(line, cursorOffset);\n      selector = parsedSelector.selector;\n    } catch {\n      selector = EMPTY_SELECTOR;\n    }\n\n    if (!isValueStart && selector === EMPTY_SELECTOR) {\n      // start task gets all labels\n      await this.start();\n      const allLabels = this.getLabelKeys();\n      return { context, suggestions: [{ label: `Labels`, items: allLabels.map(wrapLabel) }] };\n    }\n\n    const existingKeys = parsedSelector ? parsedSelector.labelKeys : [];\n\n    let labelValues;\n    // Query labels for selector\n    if (selector) {\n      if (selector === EMPTY_SELECTOR && labelKey) {\n        const labelValuesForKey = await this.getLabelValues(labelKey, absoluteRange);\n        labelValues = { [labelKey]: labelValuesForKey };\n      } else {\n        labelValues = await this.getSeriesLabels(selector, absoluteRange);\n      }\n    }\n\n    if (!labelValues) {\n      console.warn(`Server did not return any values for selector = ${selector}`);\n      return { context, suggestions };\n    }\n\n    if ((text && isValueStart) || wrapperClasses.includes('attr-value')) {\n      // Label values\n      if (labelKey && labelValues[labelKey]) {\n        context = 'context-label-values';\n        suggestions.push({\n          label: `Label values for \"${labelKey}\"`,\n          items: labelValues[labelKey].map(wrapLabel),\n        });\n      }\n    } else {\n      // Label keys\n      const labelKeys = labelValues ? Object.keys(labelValues) : DEFAULT_KEYS;\n\n      if (labelKeys) {\n        const possibleKeys = _.difference(labelKeys, existingKeys);\n        if (possibleKeys.length) {\n          const newItems = possibleKeys.map(key => ({ label: key }));\n          const newSuggestion: CompletionItemGroup = { label: `Labels`, items: newItems };\n          suggestions.push(newSuggestion);\n        }\n      }\n    }\n\n    return { context, suggestions };\n  }\n\n  async importQueries(queries: LokiQuery[], datasourceType: string): Promise<LokiQuery[]> {\n    if (datasourceType === 'prometheus') {\n      return Promise.all(\n        queries.map(async query => {\n          const expr = await this.importPrometheusQuery(query.expr);\n          const { ...rest } = query as PromQuery;\n          return {\n            ...rest,\n            expr,\n          };\n        })\n      );\n    }\n    // Return a cleaned LokiQuery\n    return queries.map(query => ({\n      refId: query.refId,\n      expr: '',\n    }));\n  }\n\n  async importPrometheusQuery(query: string): Promise<string> {\n    if (!query) {\n      return '';\n    }\n\n    // Consider only first selector in query\n    const selectorMatch = query.match(selectorRegexp);\n    if (!selectorMatch) {\n      return '';\n    }\n\n    const selector = selectorMatch[0];\n    const labels: { [key: string]: { value: any; operator: any } } = {};\n    selector.replace(labelRegexp, (_, key, operator, value) => {\n      labels[key] = { value, operator };\n      return '';\n    });\n\n    // Keep only labels that exist on origin and target datasource\n    await this.start(); // fetches all existing label keys\n    const existingKeys = this.labelKeys;\n    let labelsToKeep: { [key: string]: { value: any; operator: any } } = {};\n    if (existingKeys && existingKeys.length) {\n      // Check for common labels\n      for (const key in labels) {\n        if (existingKeys && existingKeys.includes(key)) {\n          // Should we check for label value equality here?\n          labelsToKeep[key] = labels[key];\n        }\n      }\n    } else {\n      // Keep all labels by default\n      labelsToKeep = labels;\n    }\n\n    const labelKeys = Object.keys(labelsToKeep).sort();\n    const cleanSelector = labelKeys\n      .map(key => `${key}${labelsToKeep[key].operator}${labelsToKeep[key].value}`)\n      .join(',');\n\n    return ['{', cleanSelector, '}'].join('');\n  }\n\n  async getSeriesLabels(selector: string, absoluteRange: AbsoluteTimeRange) {\n    if (this.lookupsDisabled) {\n      return undefined;\n    }\n    try {\n      return await this.fetchSeriesLabels(selector, absoluteRange);\n    } catch (error) {\n      // TODO: better error handling\n      console.error(error);\n      return undefined;\n    }\n  }\n\n  /**\n   * Fetches all label keys\n   * @param absoluteRange Fetches\n   */\n  async fetchLogLabels(absoluteRange: AbsoluteTimeRange): Promise<any> {\n    const url = '/loki/api/v1/label';\n    try {\n      this.logLabelFetchTs = Date.now().valueOf();\n      const rangeParams = absoluteRange ? rangeToParams(absoluteRange) : {};\n      const res = await this.request(url, rangeParams);\n      this.labelKeys = res.slice().sort();\n      this.logLabelOptions = this.labelKeys.map((key: string) => ({ label: key, value: key, isLeaf: false }));\n    } catch (e) {\n      console.error(e);\n    }\n    return [];\n  }\n\n  async refreshLogLabels(absoluteRange: AbsoluteTimeRange, forceRefresh?: boolean) {\n    if ((this.labelKeys && Date.now().valueOf() - this.logLabelFetchTs > LABEL_REFRESH_INTERVAL) || forceRefresh) {\n      await this.fetchLogLabels(absoluteRange);\n    }\n  }\n\n  /**\n   * Fetch labels for a selector. This is cached by it's args but also by the global timeRange currently selected as\n   * they can change over requested time.\n   * @param name\n   */\n  fetchSeriesLabels = async (match: string, absoluteRange: AbsoluteTimeRange): Promise<Record<string, string[]>> => {\n    const rangeParams = absoluteRange ? rangeToParams(absoluteRange) : { start: 0, end: 0 };\n    const url = '/loki/api/v1/series';\n    const { start, end } = rangeParams;\n\n    const cacheKey = this.generateCacheKey(url, start, end, match);\n    const params = { match, start, end };\n    let value = this.seriesCache.get(cacheKey);\n    if (!value) {\n      // Clear value when requesting new one. Empty object being truthy also makes sure we don't request twice.\n      this.seriesCache.set(cacheKey, {});\n      const data = await this.request(url, params);\n      const { values } = processLabels(data);\n      value = values;\n      this.seriesCache.set(cacheKey, value);\n    }\n    return value;\n  };\n\n  // Cache key is a bit different here. We round up to a minute the intervals.\n  // The rounding may seem strange but makes relative intervals like now-1h less prone to need separate request every\n  // millisecond while still actually getting all the keys for the correct interval. This still can create problems\n  // when user does not the newest values for a minute if already cached.\n  generateCacheKey(url: string, start: number, end: number, param: string): string {\n    return [url, this.roundTime(start), this.roundTime(end), param].join();\n  }\n\n  // Round nanos epoch to nearest 5 minute interval\n  roundTime(nanos: number): number {\n    return nanos ? Math.floor(nanos / NS_IN_MS / 1000 / 60 / 5) : 0;\n  }\n\n  async getLabelValues(key: string, absoluteRange = this.initialRange): Promise<string[]> {\n    return await this.fetchLabelValues(key, absoluteRange);\n  }\n\n  async fetchLabelValues(key: string, absoluteRange: AbsoluteTimeRange): Promise<string[]> {\n    const url = `/loki/api/v1/label/${key}/values`;\n    let values: string[] = [];\n    const rangeParams = absoluteRange ? rangeToParams(absoluteRange) : { start: 0, end: 0 };\n    const { start, end } = rangeParams;\n\n    const cacheKey = this.generateCacheKey(url, start, end, key);\n    const params = { start, end };\n\n    let value = this.labelsCache.get(cacheKey);\n    if (!value) {\n      try {\n        // Clear value when requesting new one. Empty object being truthy also makes sure we don't request twice.\n        this.labelsCache.set(cacheKey, []);\n        const res = await this.request(url, params);\n        values = res.slice().sort();\n        value = values;\n        this.labelsCache.set(cacheKey, value);\n\n        this.logLabelOptions = this.addLabelValuesToOptions(key, values);\n      } catch (e) {\n        console.error(e);\n      }\n    } else {\n      this.logLabelOptions = this.addLabelValuesToOptions(key, value);\n    }\n    return value ?? [];\n  }\n\n  private addLabelValuesToOptions = (labelKey: string, values: string[]) => {\n    return this.logLabelOptions.map(keyOption =>\n      keyOption.value === labelKey\n        ? {\n            ...keyOption,\n            children: values.map(value => ({ label: value, value })),\n          }\n        : keyOption\n    );\n  };\n}\n","// Libraries\nimport { cloneDeep, isEmpty, map as lodashMap } from 'lodash';\nimport { merge, Observable, of } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\n// Types\nimport {\n  AnnotationEvent,\n  AnnotationQueryRequest,\n  DataFrame,\n  DataFrameView,\n  DataQueryError,\n  DataQueryRequest,\n  DataQueryResponse,\n  DataSourceApi,\n  DataSourceInstanceSettings,\n  dateMath,\n  DateTime,\n  FieldCache,\n  LoadingState,\n  LogRowModel,\n  PluginMeta,\n  QueryResultMeta,\n  ScopedVars,\n  TimeRange,\n  CoreApp,\n} from '@grafana/data';\nimport { BackendSrvRequest, FetchError, getBackendSrv } from '@grafana/runtime';\nimport { addLabelToQuery } from 'app/plugins/datasource/prometheus/add_label_to_query';\nimport { TemplateSrv } from 'app/features/templating/template_srv';\nimport { convertToWebSocketUrl } from 'app/core/utils/explore';\nimport { lokiResultsToTableModel, lokiStreamResultToDataFrame, processRangeQueryResponse } from './result_transformer';\nimport { getHighlighterExpressionsFromQuery } from './query_utils';\nimport { getTimeSrv } from 'app/features/dashboard/services/TimeSrv';\n\nimport {\n  LokiOptions,\n  LokiQuery,\n  LokiRangeQueryRequest,\n  LokiResponse,\n  LokiResultType,\n  LokiStreamResponse,\n} from './types';\nimport { LiveStreams, LokiLiveTarget } from './live_streams';\nimport LanguageProvider, { rangeToParams } from './language_provider';\nimport { serializeParams } from '../../../core/utils/fetch';\nimport { RowContextOptions } from '@grafana/ui/src/components/Logs/LogRowContextProvider';\n\nexport type RangeQueryOptions = DataQueryRequest<LokiQuery> | AnnotationQueryRequest<LokiQuery>;\nexport const DEFAULT_MAX_LINES = 1000;\nexport const LOKI_ENDPOINT = '/loki/api/v1';\n\nconst RANGE_QUERY_ENDPOINT = `${LOKI_ENDPOINT}/query_range`;\nconst INSTANT_QUERY_ENDPOINT = `${LOKI_ENDPOINT}/query`;\n\nconst DEFAULT_QUERY_PARAMS: Partial<LokiRangeQueryRequest> = {\n  direction: 'BACKWARD',\n  limit: DEFAULT_MAX_LINES,\n  query: '',\n};\n\nexport class LokiDatasource extends DataSourceApi<LokiQuery, LokiOptions> {\n  private streams = new LiveStreams();\n  languageProvider: LanguageProvider;\n  maxLines: number;\n\n  /** @ngInject */\n  constructor(private instanceSettings: DataSourceInstanceSettings<LokiOptions>, private templateSrv: TemplateSrv) {\n    super(instanceSettings);\n\n    this.languageProvider = new LanguageProvider(this);\n    const settingsData = instanceSettings.jsonData || {};\n    this.maxLines = parseInt(settingsData.maxLines ?? '0', 10) || DEFAULT_MAX_LINES;\n  }\n\n  _request(apiUrl: string, data?: any, options?: Partial<BackendSrvRequest>): Observable<Record<string, any>> {\n    const baseUrl = this.instanceSettings.url;\n    const params = data ? serializeParams(data) : '';\n    const url = `${baseUrl}${apiUrl}${params.length ? `?${params}` : ''}`;\n    const req = {\n      ...options,\n      url,\n    };\n\n    return getBackendSrv().fetch<Record<string, any>>(req);\n  }\n\n  query(options: DataQueryRequest<LokiQuery>): Observable<DataQueryResponse> {\n    const subQueries: Array<Observable<DataQueryResponse>> = [];\n    const filteredTargets = options.targets\n      .filter(target => target.expr && !target.hide)\n      .map(target => ({\n        ...target,\n        expr: this.templateSrv.replace(target.expr, options.scopedVars, this.interpolateQueryExpr),\n      }));\n\n    for (const target of filteredTargets) {\n      if (options.app === CoreApp.Explore) {\n        subQueries.push(this.runInstantQuery(target, options, filteredTargets.length));\n      }\n      subQueries.push(this.runRangeQuery(target, options, filteredTargets.length));\n    }\n\n    // No valid targets, return the empty result to save a round trip.\n    if (isEmpty(subQueries)) {\n      return of({\n        data: [],\n        state: LoadingState.Done,\n      });\n    }\n\n    return merge(...subQueries);\n  }\n\n  runInstantQuery = (\n    target: LokiQuery,\n    options: DataQueryRequest<LokiQuery>,\n    responseListLength: number\n  ): Observable<DataQueryResponse> => {\n    const timeNs = this.getTime(options.range.to, true);\n    const query = {\n      query: target.expr,\n      time: `${timeNs + (1e9 - (timeNs % 1e9))}`,\n      limit: Math.min(options.maxDataPoints || Infinity, this.maxLines),\n    };\n    /** Show results of Loki instant queries only in table */\n    const meta: QueryResultMeta = {\n      preferredVisualisationType: 'table',\n    };\n\n    return this._request(INSTANT_QUERY_ENDPOINT, query).pipe(\n      map((response: { data: LokiResponse }) => {\n        if (response.data.data.resultType === LokiResultType.Stream) {\n          return {\n            data: [],\n            key: `${target.refId}_instant`,\n          };\n        }\n\n        return {\n          data: [lokiResultsToTableModel(response.data.data.result, responseListLength, target.refId, meta, true)],\n          key: `${target.refId}_instant`,\n        };\n      }),\n      catchError((err: any) => this.throwUnless(err, err.status === 404, target))\n    );\n  };\n\n  createRangeQuery(target: LokiQuery, options: RangeQueryOptions): LokiRangeQueryRequest {\n    const query = target.expr;\n    let range: { start?: number; end?: number; step?: number } = {};\n    if (options.range) {\n      const startNs = this.getTime(options.range.from, false);\n      const endNs = this.getTime(options.range.to, true);\n      const rangeMs = Math.ceil((endNs - startNs) / 1e6);\n      const step = Math.ceil(\n        this.adjustInterval((options as DataQueryRequest<LokiQuery>).intervalMs || 1000, rangeMs) / 1000\n      );\n      const alignedTimes = {\n        start: startNs - (startNs % 1e9),\n        end: endNs + (1e9 - (endNs % 1e9)),\n      };\n\n      range = {\n        start: alignedTimes.start,\n        end: alignedTimes.end,\n        step,\n      };\n    }\n\n    return {\n      ...DEFAULT_QUERY_PARAMS,\n      ...range,\n      query,\n      limit: Math.min((options as DataQueryRequest<LokiQuery>).maxDataPoints || Infinity, this.maxLines),\n    };\n  }\n\n  /**\n   * Attempts to send a query to /loki/api/v1/query_range\n   */\n  runRangeQuery = (\n    target: LokiQuery,\n    options: RangeQueryOptions,\n    responseListLength = 1\n  ): Observable<DataQueryResponse> => {\n    // target.maxLines value already preprocessed\n    // available cases:\n    // 1) empty input -> mapped to NaN, falls back to dataSource.maxLines limit\n    // 2) input with at least 1 character and that is either incorrect (value in the input field is not a number) or negative\n    //    - mapped to 0, falls back to the limit of 0 lines\n    // 3) default case - correct input, mapped to the value from the input field\n\n    let linesLimit = 0;\n    if (target.maxLines === undefined) {\n      // no target.maxLines, using options.maxDataPoints\n      linesLimit = Math.min((options as DataQueryRequest<LokiQuery>).maxDataPoints || Infinity, this.maxLines);\n    } else {\n      // using target.maxLines\n      if (isNaN(target.maxLines)) {\n        linesLimit = this.maxLines;\n      } else {\n        linesLimit = target.maxLines;\n      }\n    }\n\n    const queryOptions = { ...options, maxDataPoints: linesLimit };\n    if ((options as DataQueryRequest<LokiQuery>).liveStreaming) {\n      return this.runLiveQuery(target, queryOptions);\n    }\n    const query = this.createRangeQuery(target, queryOptions);\n    return this._request(RANGE_QUERY_ENDPOINT, query).pipe(\n      catchError((err: any) => this.throwUnless(err, err.status === 404, target)),\n      switchMap((response: { data: LokiResponse; status: number }) =>\n        processRangeQueryResponse(\n          response.data,\n          target,\n          query,\n          responseListLength,\n          linesLimit,\n          this.instanceSettings.jsonData,\n          (options as DataQueryRequest<LokiQuery>).scopedVars,\n          (options as DataQueryRequest<LokiQuery>).reverse\n        )\n      )\n    );\n  };\n\n  createLiveTarget(target: LokiQuery, options: { maxDataPoints?: number }): LokiLiveTarget {\n    const query = target.expr;\n    const baseUrl = this.instanceSettings.url;\n    const params = serializeParams({ query });\n\n    return {\n      query,\n      url: convertToWebSocketUrl(`${baseUrl}/loki/api/v1/tail?${params}`),\n      refId: target.refId,\n      size: Math.min(options.maxDataPoints || Infinity, this.maxLines),\n    };\n  }\n\n  /**\n   * Runs live queries which in this case means creating a websocket and listening on it for new logs.\n   * This returns a bit different dataFrame than runQueries as it returns single dataframe even if there are multiple\n   * Loki streams, sets only common labels on dataframe.labels and has additional dataframe.fields.labels for unique\n   * labels per row.\n   */\n  runLiveQuery = (target: LokiQuery, options: { maxDataPoints?: number }): Observable<DataQueryResponse> => {\n    const liveTarget = this.createLiveTarget(target, options);\n\n    return this.streams.getStream(liveTarget).pipe(\n      map(data => ({\n        data,\n        key: `loki-${liveTarget.refId}`,\n        state: LoadingState.Streaming,\n      }))\n    );\n  };\n\n  interpolateVariablesInQueries(queries: LokiQuery[], scopedVars: ScopedVars): LokiQuery[] {\n    let expandedQueries = queries;\n    if (queries && queries.length) {\n      expandedQueries = queries.map(query => ({\n        ...query,\n        datasource: this.name,\n        expr: this.templateSrv.replace(query.expr, scopedVars, this.interpolateQueryExpr),\n      }));\n    }\n\n    return expandedQueries;\n  }\n\n  getQueryDisplayText(query: LokiQuery) {\n    return query.expr;\n  }\n\n  async importQueries(queries: LokiQuery[], originMeta: PluginMeta): Promise<LokiQuery[]> {\n    return this.languageProvider.importQueries(queries, originMeta.id);\n  }\n\n  async metadataRequest(url: string, params?: Record<string, string | number>) {\n    const res = await this._request(url, params, { hideFromInspector: true }).toPromise();\n    return res.data.data || res.data.values || [];\n  }\n\n  async metricFindQuery(query: string, optionalOptions?: any) {\n    if (!query) {\n      return Promise.resolve([]);\n    }\n    const interpolated = this.templateSrv.replace(query, {}, this.interpolateQueryExpr);\n    return await this.processMetricFindQuery(interpolated, optionalOptions?.range);\n  }\n\n  async processMetricFindQuery(query: string, range?: TimeRange) {\n    const labelNamesRegex = /^label_names\\(\\)\\s*$/;\n    const labelValuesRegex = /^label_values\\((?:(.+),\\s*)?([a-zA-Z_][a-zA-Z0-9_]*)\\)\\s*$/;\n\n    const timeRange = range || getTimeSrv().timeRange();\n    const params = rangeToParams({ from: timeRange.from.valueOf(), to: timeRange.to.valueOf() });\n\n    const labelNames = query.match(labelNamesRegex);\n    if (labelNames) {\n      return await this.labelNamesQuery(params);\n    }\n\n    const labelValues = query.match(labelValuesRegex);\n    if (labelValues) {\n      return await this.labelValuesQuery(labelValues[2], params);\n    }\n\n    return Promise.resolve([]);\n  }\n\n  async labelNamesQuery(params?: Record<string, string | number>) {\n    const url = `${LOKI_ENDPOINT}/label`;\n    const result = await this.metadataRequest(url, params);\n    return result.map((value: string) => ({ text: value }));\n  }\n\n  async labelValuesQuery(label: string, params?: Record<string, string | number>) {\n    const url = `${LOKI_ENDPOINT}/label/${label}/values`;\n    const result = await this.metadataRequest(url, params);\n    return result.map((value: string) => ({ text: value }));\n  }\n\n  interpolateQueryExpr(value: any, variable: any) {\n    // if no multi or include all do not regexEscape\n    if (!variable.multi && !variable.includeAll) {\n      return lokiRegularEscape(value);\n    }\n\n    if (typeof value === 'string') {\n      return lokiSpecialRegexEscape(value);\n    }\n\n    const escapedValues = lodashMap(value, lokiSpecialRegexEscape);\n    return escapedValues.join('|');\n  }\n\n  modifyQuery(query: LokiQuery, action: any): LokiQuery {\n    let expression = query.expr ?? '';\n    switch (action.type) {\n      case 'ADD_FILTER': {\n        expression = addLabelToQuery(expression, action.key, action.value, undefined, true);\n        break;\n      }\n      case 'ADD_FILTER_OUT': {\n        expression = addLabelToQuery(expression, action.key, action.value, '!=', true);\n        break;\n      }\n      default:\n        break;\n    }\n    return { ...query, expr: expression };\n  }\n\n  getHighlighterExpression(query: LokiQuery): string[] {\n    return getHighlighterExpressionsFromQuery(query.expr);\n  }\n\n  getTime(date: string | DateTime, roundUp: boolean) {\n    if (typeof date === 'string') {\n      date = dateMath.parse(date, roundUp)!;\n    }\n\n    return Math.ceil(date.valueOf() * 1e6);\n  }\n\n  getLogRowContext = (row: LogRowModel, options?: RowContextOptions): Promise<{ data: DataFrame[] }> => {\n    const target = this.prepareLogRowContextQueryTarget(\n      row,\n      (options && options.limit) || 10,\n      (options && options.direction) || 'BACKWARD'\n    );\n\n    const reverse = options && options.direction === 'FORWARD';\n    return this._request(RANGE_QUERY_ENDPOINT, target)\n      .pipe(\n        catchError((err: any) => {\n          if (err.status === 404) {\n            return of(err);\n          }\n\n          const error: DataQueryError = {\n            message: 'Error during context query. Please check JS console logs.',\n            status: err.status,\n            statusText: err.statusText,\n          };\n          throw error;\n        }),\n        switchMap((res: { data: LokiStreamResponse; status: number }) =>\n          of({\n            data: res.data ? res.data.data.result.map(stream => lokiStreamResultToDataFrame(stream, reverse)) : [],\n          })\n        )\n      )\n      .toPromise();\n  };\n\n  prepareLogRowContextQueryTarget = (row: LogRowModel, limit: number, direction: 'BACKWARD' | 'FORWARD') => {\n    const query = Object.keys(row.labels)\n      .map(label => `${label}=\"${row.labels[label].replace(/\\\\/g, '\\\\\\\\')}\"`) // escape backslashes in label as users can't escape them by themselves\n      .join(',');\n\n    const contextTimeBuffer = 2 * 60 * 60 * 1000; // 2h buffer\n    const commonTargetOptions = {\n      limit,\n      query: `{${query}}`,\n      expr: `{${query}}`,\n      direction,\n    };\n\n    const fieldCache = new FieldCache(row.dataFrame);\n    const nsField = fieldCache.getFieldByName('tsNs')!;\n    const nsTimestamp = nsField.values.get(row.rowIndex);\n\n    if (direction === 'BACKWARD') {\n      return {\n        ...commonTargetOptions,\n        // convert to ns, we loose some precision here but it is not that important at the far points of the context\n        start: row.timeEpochMs - contextTimeBuffer + '000000',\n        end: nsTimestamp,\n        direction,\n      };\n    } else {\n      return {\n        ...commonTargetOptions,\n        // start param in Loki API is inclusive so we'll have to filter out the row that this request is based from\n        // and any other that were logged in the same ns but before the row. Right now these rows will be lost\n        // because the are before but came it he response that should return only rows after.\n        start: nsTimestamp,\n        // convert to ns, we loose some precision here but it is not that important at the far points of the context\n        end: row.timeEpochMs + contextTimeBuffer + '000000',\n      };\n    }\n  };\n\n  testDatasource() {\n    // Consider only last 10 minutes otherwise request takes too long\n    const startMs = Date.now() - 10 * 60 * 1000;\n    const start = `${startMs}000000`; // API expects nanoseconds\n    return this._request(`${LOKI_ENDPOINT}/label`, { start })\n      .pipe(\n        map(res => {\n          const values: any[] = res?.data?.data || res?.data?.values || [];\n          const testResult =\n            values.length > 0\n              ? { status: 'success', message: 'Data source connected and labels found.' }\n              : {\n                  status: 'error',\n                  message:\n                    'Data source connected, but no labels received. Verify that Loki and Promtail is configured properly.',\n                };\n          return testResult;\n        }),\n        catchError((err: any) => {\n          let message = 'Loki: ';\n          if (err.statusText) {\n            message += err.statusText;\n          } else {\n            message += 'Cannot connect to Loki';\n          }\n\n          if (err.status) {\n            message += `. ${err.status}`;\n          }\n\n          if (err.data && err.data.message) {\n            message += `. ${err.data.message}`;\n          } else if (err.data) {\n            message += `. ${err.data}`;\n          }\n          return of({ status: 'error', message: message });\n        })\n      )\n      .toPromise();\n  }\n\n  async annotationQuery(options: AnnotationQueryRequest<LokiQuery>): Promise<AnnotationEvent[]> {\n    if (!options.annotation.expr) {\n      return [];\n    }\n\n    const interpolatedExpr = this.templateSrv.replace(options.annotation.expr, {}, this.interpolateQueryExpr);\n    const query = { refId: `annotation-${options.annotation.name}`, expr: interpolatedExpr };\n    const { data } = await this.runRangeQuery(query, options as any).toPromise();\n    const annotations: AnnotationEvent[] = [];\n\n    for (const frame of data) {\n      const tags: string[] = [];\n      for (const field of frame.fields) {\n        if (field.labels) {\n          tags.push.apply(tags, [...new Set(Object.values(field.labels).map((label: string) => label.trim()))]);\n        }\n      }\n      const view = new DataFrameView<{ ts: string; line: string }>(frame);\n\n      view.forEach(row => {\n        annotations.push({\n          time: new Date(row.ts).valueOf(),\n          text: row.line,\n          tags,\n        });\n      });\n    }\n\n    return annotations;\n  }\n\n  showContextToggle(row?: LogRowModel): boolean {\n    return (row && row.searchWords && row.searchWords.length > 0) === true;\n  }\n\n  throwUnless(err: FetchError, condition: boolean, target: LokiQuery) {\n    if (condition) {\n      return of(err);\n    }\n\n    const error = this.processError(err, target);\n    throw error;\n  }\n\n  processError(err: FetchError, target: LokiQuery) {\n    let error = cloneDeep(err);\n    if (err.data.message.includes('escape') && target.expr.includes('\\\\')) {\n      error.data.message = `Error: ${err.data.message}. Make sure that all special characters are escaped with \\\\. For more information on escaping of special characters visit LogQL documentation at https://github.com/grafana/loki/blob/master/docs/logql.md.`;\n    }\n    return error;\n  }\n\n  adjustInterval(interval: number, range: number) {\n    // Loki will drop queries that might return more than 11000 data points.\n    // Calibrate interval if it is too small.\n    if (interval !== 0 && range / interval > 11000) {\n      interval = Math.ceil(range / 11000);\n    }\n    return Math.max(interval, 1000);\n  }\n}\n\nexport function lokiRegularEscape(value: any) {\n  if (typeof value === 'string') {\n    return value.replace(/'/g, \"\\\\\\\\'\");\n  }\n  return value;\n}\n\nexport function lokiSpecialRegexEscape(value: any) {\n  if (typeof value === 'string') {\n    return lokiRegularEscape(value.replace(/\\\\/g, '\\\\\\\\\\\\\\\\').replace(/[$^*{}\\[\\]+?.()|]/g, '\\\\\\\\$&'));\n  }\n  return value;\n}\n\nexport default LokiDatasource;\n","import React, { PureComponent } from 'react';\nimport { shuffle } from 'lodash';\nimport { ExploreStartPageProps, DataQuery } from '@grafana/data';\nimport LokiLanguageProvider from '../language_provider';\n\nconst DEFAULT_EXAMPLES = ['{job=\"default/prometheus\"}'];\nconst PREFERRED_LABELS = ['job', 'app', 'k8s_app'];\nconst EXAMPLES_LIMIT = 5;\n\nconst LOGQL_EXAMPLES = [\n  {\n    title: 'Count over time',\n    expression: 'count_over_time({job=\"mysql\"}[5m])',\n    label: 'This query counts all the log lines within the last five minutes for the MySQL job.',\n  },\n  {\n    title: 'Rate',\n    expression: 'rate(({job=\"mysql\"} |= \"error\" != \"timeout\")[10s])',\n    label:\n      'This query gets the per-second rate of all non-timeout errors within the last ten seconds for the MySQL job.',\n  },\n  {\n    title: 'Aggregate, count, and group',\n    expression: 'sum(count_over_time({job=\"mysql\"}[5m])) by (level)',\n    label: 'Get the count of logs during the last five minutes, grouping by level.',\n  },\n];\n\nexport default class LokiCheatSheet extends PureComponent<ExploreStartPageProps, { userExamples: string[] }> {\n  userLabelTimer: NodeJS.Timeout;\n  state = {\n    userExamples: DEFAULT_EXAMPLES,\n  };\n\n  componentDidMount() {\n    this.scheduleUserLabelChecking();\n  }\n\n  componentWillUnmount() {\n    clearTimeout(this.userLabelTimer);\n  }\n\n  scheduleUserLabelChecking() {\n    this.userLabelTimer = setTimeout(this.checkUserLabels, 1000);\n  }\n\n  checkUserLabels = async () => {\n    // Set example from user labels\n    const provider: LokiLanguageProvider = this.props.datasource?.languageProvider;\n    if (provider.started) {\n      const labels = provider.getLabelKeys() || [];\n      const preferredLabel = PREFERRED_LABELS.find(l => labels.includes(l));\n      if (preferredLabel) {\n        const values = await provider.getLabelValues(preferredLabel);\n        const userExamples = shuffle(values)\n          .slice(0, EXAMPLES_LIMIT)\n          .map(value => `{${preferredLabel}=\"${value}\"}`);\n        this.setState({ userExamples });\n      }\n    } else {\n      this.scheduleUserLabelChecking();\n    }\n  };\n\n  renderExpression(expr: string) {\n    const { onClickExample } = this.props;\n\n    return (\n      <div\n        className=\"cheat-sheet-item__example\"\n        key={expr}\n        onClick={e => onClickExample({ refId: 'A', expr } as DataQuery)}\n      >\n        <code>{expr}</code>\n      </div>\n    );\n  }\n\n  render() {\n    const { userExamples } = this.state;\n\n    return (\n      <div>\n        <h2>Loki Cheat Sheet</h2>\n        <div className=\"cheat-sheet-item\">\n          <div className=\"cheat-sheet-item__title\">See your logs</div>\n          <div className=\"cheat-sheet-item__label\">Start by selecting a log stream from the Log labels selector.</div>\n          <div className=\"cheat-sheet-item__label\">\n            Alternatively, you can write a stream selector into the query field:\n          </div>\n          {this.renderExpression('{job=\"default/prometheus\"}')}\n          {userExamples !== DEFAULT_EXAMPLES && userExamples.length > 0 ? (\n            <div>\n              <div className=\"cheat-sheet-item__label\">Here are some example streams from your logs:</div>\n              {userExamples.map(example => this.renderExpression(example))}\n            </div>\n          ) : null}\n        </div>\n        <div className=\"cheat-sheet-item\">\n          <div className=\"cheat-sheet-item__title\">Combine stream selectors</div>\n          {this.renderExpression('{app=\"cassandra\",namespace=\"prod\"}')}\n          <div className=\"cheat-sheet-item__label\">Returns all log lines from streams that have both labels.</div>\n        </div>\n\n        <div className=\"cheat-sheet-item\">\n          <div className=\"cheat-sheet-item__title\">Filtering for search terms.</div>\n          {this.renderExpression('{app=\"cassandra\"} |~ \"(duration|latency)s*(=|is|of)s*[d.]+\"')}\n          {this.renderExpression('{app=\"cassandra\"} |= \"exact match\"')}\n          {this.renderExpression('{app=\"cassandra\"} != \"do not match\"')}\n          <div className=\"cheat-sheet-item__label\">\n            <a href=\"https://github.com/grafana/loki/blob/master/docs/logql.md#filter-expression\" target=\"logql\">\n              LogQL\n            </a>{' '}\n            supports exact and regular expression filters.\n          </div>\n        </div>\n        {LOGQL_EXAMPLES.map(item => (\n          <div className=\"cheat-sheet-item\" key={item.expression}>\n            <div className=\"cheat-sheet-item__title\">{item.title}</div>\n            {this.renderExpression(item.expression)}\n            <div className=\"cheat-sheet-item__label\">{item.label}</div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import React, { FunctionComponent } from 'react';\nimport { LokiQueryFieldForm, LokiQueryFieldFormProps } from './LokiQueryFieldForm';\nimport { useLokiSyntaxAndLabels } from './useLokiSyntaxAndLabels';\nimport LokiLanguageProvider from '../language_provider';\n\ntype LokiQueryFieldProps = Omit<\n  LokiQueryFieldFormProps,\n  'syntax' | 'syntaxLoaded' | 'onLoadOptions' | 'onLabelsRefresh' | 'logLabelOptions' | 'absoluteRange'\n>;\n\nexport const LokiQueryField: FunctionComponent<LokiQueryFieldProps> = props => {\n  const { datasource, range, ...otherProps } = props;\n  const absoluteTimeRange = { from: range!.from!.valueOf(), to: range!.to!.valueOf() }; // Range here is never optional\n\n  const { isSyntaxReady, setActiveOption, refreshLabels, syntax, logLabelOptions } = useLokiSyntaxAndLabels(\n    datasource.languageProvider as LokiLanguageProvider,\n    absoluteTimeRange\n  );\n\n  return (\n    <LokiQueryFieldForm\n      datasource={datasource}\n      /**\n       * setActiveOption name is intentional. Because of the way rc-cascader requests additional data\n       * https://github.com/react-component/cascader/blob/master/src/Cascader.jsx#L165\n       * we are notyfing useLokiSyntax hook, what the active option is, and then it's up to the hook logic\n       * to fetch data of options that aren't fetched yet\n       */\n      onLoadOptions={setActiveOption}\n      onLabelsRefresh={refreshLabels}\n      absoluteRange={absoluteTimeRange}\n      syntax={syntax}\n      syntaxLoaded={isSyntaxReady}\n      logLabelOptions={logLabelOptions}\n      {...otherProps}\n    />\n  );\n};\n\nexport default LokiQueryField;\n","// Libraries\nimport React, { memo } from 'react';\n\n// Types\nimport { InlineFormLabel } from '@grafana/ui';\n\nexport interface LokiExploreExtraFieldProps {\n  label: string;\n  onChangeFunc: (e: React.SyntheticEvent<HTMLInputElement>) => void;\n  onKeyDownFunc: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n  value: string;\n  type?: string;\n  min?: number;\n}\n\nexport function LokiExploreExtraField(props: LokiExploreExtraFieldProps) {\n  const { label, onChangeFunc, onKeyDownFunc, value, type, min } = props;\n\n  return (\n    <div className=\"gf-form-inline\">\n      <div className=\"gf-form\">\n        <InlineFormLabel width={5}>{label}</InlineFormLabel>\n        <input\n          type={type}\n          className=\"gf-form-input width-4\"\n          placeholder={'auto'}\n          onChange={onChangeFunc}\n          onKeyDown={onKeyDownFunc}\n          min={min}\n          value={value}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default memo(LokiExploreExtraField);\n","// Libraries\nimport React, { memo } from 'react';\nimport _ from 'lodash';\n\n// Types\nimport { ExploreQueryFieldProps } from '@grafana/data';\nimport { LokiDatasource } from '../datasource';\nimport { LokiQuery, LokiOptions } from '../types';\nimport { LokiQueryField } from './LokiQueryField';\nimport LokiExploreExtraField from './LokiExploreExtraField';\n\ntype Props = ExploreQueryFieldProps<LokiDatasource, LokiQuery, LokiOptions>;\n\nexport function LokiExploreQueryEditor(props: Props) {\n  const { range, query, data, datasource, history, onChange, onRunQuery } = props;\n\n  function onChangeQueryLimit(value: string) {\n    const { query, onChange } = props;\n    const nextQuery = { ...query, maxLines: preprocessMaxLines(value) };\n    onChange(nextQuery);\n  }\n\n  function preprocessMaxLines(value: string): number {\n    if (value.length === 0) {\n      // empty input - falls back to dataSource.maxLines limit\n      return NaN;\n    } else if (value.length > 0 && (isNaN(+value) || +value < 0)) {\n      // input with at least 1 character and that is either incorrect (value in the input field is not a number) or negative\n      // falls back to the limit of 0 lines\n      return 0;\n    } else {\n      // default case - correct input\n      return +value;\n    }\n  }\n\n  function onMaxLinesChange(e: React.SyntheticEvent<HTMLInputElement>) {\n    if (query.maxLines !== preprocessMaxLines(e.currentTarget.value)) {\n      onChangeQueryLimit(e.currentTarget.value);\n    }\n  }\n\n  function onReturnKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n    if (e.key === 'Enter') {\n      onRunQuery();\n    }\n  }\n\n  return (\n    <LokiQueryField\n      datasource={datasource}\n      query={query}\n      onChange={onChange}\n      onBlur={() => {}}\n      onRunQuery={onRunQuery}\n      history={history}\n      data={data}\n      range={range}\n      ExtraFieldElement={\n        <LokiExploreExtraField\n          label={'Line limit'}\n          onChangeFunc={onMaxLinesChange}\n          onKeyDownFunc={onReturnKeyDown}\n          value={query?.maxLines?.toString() || ''}\n          type={'number'}\n          min={0}\n        />\n      }\n    />\n  );\n}\n\nexport default memo(LokiExploreQueryEditor);\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Types\nimport { QueryEditorProps } from '@grafana/data';\nimport { InlineFormLabel } from '@grafana/ui';\nimport { LokiDatasource } from '../datasource';\nimport { LokiQuery } from '../types';\nimport { LokiQueryField } from './LokiQueryField';\n\ntype Props = QueryEditorProps<LokiDatasource, LokiQuery>;\n\ninterface State {\n  legendFormat: string;\n}\n\nexport class LokiQueryEditor extends PureComponent<Props, State> {\n  // Query target to be modified and used for queries\n  query: LokiQuery;\n\n  constructor(props: Props) {\n    super(props);\n    // Use default query to prevent undefined input values\n    const defaultQuery: Partial<LokiQuery> = { expr: '', legendFormat: '' };\n    const query = Object.assign({}, defaultQuery, props.query);\n    this.query = query;\n    // Query target properties that are fully controlled inputs\n    this.state = {\n      // Fully controlled text inputs\n      legendFormat: query.legendFormat ?? '',\n    };\n  }\n\n  onFieldChange = (query: LokiQuery, override?: any) => {\n    this.query.expr = query.expr;\n  };\n\n  onLegendChange = (e: React.SyntheticEvent<HTMLInputElement>) => {\n    const legendFormat = e.currentTarget.value;\n    this.query.legendFormat = legendFormat;\n    this.setState({ legendFormat });\n  };\n\n  onRunQuery = () => {\n    const { query } = this;\n    this.props.onChange(query);\n    this.props.onRunQuery();\n  };\n\n  render() {\n    const { datasource, query, data, range } = this.props;\n    const { legendFormat } = this.state;\n\n    return (\n      <div>\n        <LokiQueryField\n          datasource={datasource}\n          query={query}\n          onChange={this.onFieldChange}\n          onRunQuery={this.onRunQuery}\n          history={[]}\n          data={data}\n          range={range}\n        />\n\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <InlineFormLabel\n              width={7}\n              tooltip=\"Controls the name of the time series, using name or pattern. For example\n        {{hostname}} will be replaced with label value for the label hostname. The legend only applies to metric queries.\"\n            >\n              Legend\n            </InlineFormLabel>\n            <input\n              type=\"text\"\n              className=\"gf-form-input\"\n              placeholder=\"legend format\"\n              value={legendFormat}\n              onChange={this.onLegendChange}\n              onBlur={this.onRunQuery}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LokiQueryEditor;\n","/**\n * Just a simple wrapper for a react component that is actually implementing the query editor.\n */\nexport class LokiAnnotationsQueryCtrl {\n  static templateUrl = 'partials/annotations.editor.html';\n  annotation: any;\n\n  /** @ngInject */\n  constructor() {\n    this.annotation.target = this.annotation.target || {};\n    this.onQueryChange = this.onQueryChange.bind(this);\n  }\n\n  onQueryChange(expr: string) {\n    this.annotation.expr = expr;\n  }\n}\n","import React from 'react';\nimport { LegacyForms } from '@grafana/ui';\nconst { FormField } = LegacyForms;\n\ntype Props = {\n  value: string;\n  onChange: (value: string) => void;\n};\n\nexport const MaxLinesField = (props: Props) => {\n  const { value, onChange } = props;\n  return (\n    <FormField\n      label=\"Maximum lines\"\n      labelWidth={11}\n      inputWidth={20}\n      inputEl={\n        <input\n          type=\"number\"\n          className=\"gf-form-input width-8 gf-form-input--has-help-icon\"\n          value={value}\n          onChange={event => onChange(event.currentTarget.value)}\n          spellCheck={false}\n          placeholder=\"1000\"\n        />\n      }\n      tooltip={\n        <>\n          Loki queries must contain a limit of the maximum number of lines returned (default: 1000). Increase this limit\n          to have a bigger result set for ad-hoc analysis. Decrease this limit if your browser becomes sluggish when\n          displaying the log results.\n        </>\n      }\n    />\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { css } from 'emotion';\nimport { Button, DataLinkInput, stylesFactory, LegacyForms } from '@grafana/ui';\nconst { Switch, FormField } = LegacyForms;\nimport { VariableSuggestion } from '@grafana/data';\nimport { DataSourceSelectItem } from '@grafana/data';\n\nimport { DerivedFieldConfig } from '../types';\nimport DataSourcePicker from 'app/core/components/Select/DataSourcePicker';\nimport { getDatasourceSrv } from 'app/features/plugins/datasource_srv';\nimport { usePrevious } from 'react-use';\n\nconst getStyles = stylesFactory(() => ({\n  row: css`\n    display: flex;\n    align-items: baseline;\n  `,\n  nameField: css`\n    flex: 2;\n  `,\n  regexField: css`\n    flex: 3;\n  `,\n}));\n\ntype Props = {\n  value: DerivedFieldConfig;\n  onChange: (value: DerivedFieldConfig) => void;\n  onDelete: () => void;\n  suggestions: VariableSuggestion[];\n  className?: string;\n};\nexport const DerivedField = (props: Props) => {\n  const { value, onChange, onDelete, suggestions, className } = props;\n  const styles = getStyles();\n  const [showInternalLink, setShowInternalLink] = useState(!!value.datasourceUid);\n  const previousUid = usePrevious(value.datasourceUid);\n\n  // Force internal link visibility change if uid changed outside of this component.\n  useEffect(() => {\n    if (!previousUid && value.datasourceUid && !showInternalLink) {\n      setShowInternalLink(true);\n    }\n    if (previousUid && !value.datasourceUid && showInternalLink) {\n      setShowInternalLink(false);\n    }\n  }, [previousUid, value.datasourceUid, showInternalLink]);\n\n  const handleChange = (field: keyof typeof value) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    onChange({\n      ...value,\n      [field]: event.currentTarget.value,\n    });\n  };\n\n  return (\n    <div className={className}>\n      <div className={styles.row}>\n        <FormField\n          className={styles.nameField}\n          labelWidth={5}\n          // A bit of a hack to prevent using default value for the width from FormField\n          inputWidth={null}\n          label=\"Name\"\n          type=\"text\"\n          value={value.name}\n          onChange={handleChange('name')}\n        />\n        <FormField\n          className={styles.regexField}\n          inputWidth={null}\n          label=\"Regex\"\n          type=\"text\"\n          value={value.matcherRegex}\n          onChange={handleChange('matcherRegex')}\n          tooltip={\n            'Use to parse and capture some part of the log message. You can use the captured groups in the template.'\n          }\n        />\n        <Button\n          variant=\"destructive\"\n          title=\"Remove field\"\n          icon=\"times\"\n          onClick={event => {\n            event.preventDefault();\n            onDelete();\n          }}\n          className={css`\n            margin-left: 8px;\n          `}\n        />\n      </div>\n\n      <FormField\n        label={showInternalLink ? 'Query' : 'URL'}\n        labelWidth={5}\n        inputEl={\n          <DataLinkInput\n            placeholder={showInternalLink ? '${__value.raw}' : 'http://example.com/${__value.raw}'}\n            value={value.url || ''}\n            onChange={newValue =>\n              onChange({\n                ...value,\n                url: newValue,\n              })\n            }\n            suggestions={suggestions}\n          />\n        }\n        className={css`\n          width: 100%;\n        `}\n      />\n\n      <div className={styles.row}>\n        <Switch\n          label=\"Internal link\"\n          checked={showInternalLink}\n          onChange={() => {\n            if (showInternalLink) {\n              onChange({\n                ...value,\n                datasourceUid: undefined,\n              });\n            }\n            setShowInternalLink(!showInternalLink);\n          }}\n        />\n\n        {showInternalLink && (\n          <DataSourceSection\n            onChange={datasourceUid => {\n              onChange({\n                ...value,\n                datasourceUid,\n              });\n            }}\n            datasourceUid={value.datasourceUid}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\ntype DataSourceSectionProps = {\n  datasourceUid?: string;\n  onChange: (uid: string) => void;\n};\n\nconst DataSourceSection = (props: DataSourceSectionProps) => {\n  const { datasourceUid, onChange } = props;\n  const datasources: DataSourceSelectItem[] = getDatasourceSrv()\n    .getExternal()\n    // At this moment only Jaeger and Zipkin datasource is supported as the link target.\n    .filter(ds => ds.meta.tracing)\n    .map(\n      ds =>\n        ({\n          value: ds.uid,\n          name: ds.name,\n          meta: ds.meta,\n        } as DataSourceSelectItem)\n    );\n\n  let selectedDatasource = datasourceUid && datasources.find(d => d.value === datasourceUid);\n  return (\n    <DataSourcePicker\n      // Uid and value should be always set in the db and so in the items.\n      onChange={ds => onChange(ds.value!)}\n      datasources={datasources}\n      current={selectedDatasource || undefined}\n    />\n  );\n};\n","import React, { useState } from 'react';\nimport { css } from 'emotion';\nimport cx from 'classnames';\nimport { LegacyForms } from '@grafana/ui';\nconst { FormField } = LegacyForms;\nimport { DerivedFieldConfig } from '../types';\nimport { ArrayVector, Field, FieldType, LinkModel } from '@grafana/data';\nimport { getFieldLinksForExplore } from '../../../../features/explore/utils/links';\n\ntype Props = {\n  derivedFields?: DerivedFieldConfig[];\n  className?: string;\n};\nexport const DebugSection = (props: Props) => {\n  const { derivedFields, className } = props;\n  const [debugText, setDebugText] = useState('');\n\n  let debugFields: DebugField[] = [];\n  if (debugText && derivedFields) {\n    debugFields = makeDebugFields(derivedFields, debugText);\n  }\n\n  return (\n    <div className={className}>\n      <FormField\n        labelWidth={12}\n        label={'Debug log message'}\n        inputEl={\n          <textarea\n            placeholder={'Paste an example log line here to test the regular expressions of your derived fields'}\n            className={cx(\n              'gf-form-input gf-form-textarea',\n              css`\n                width: 100%;\n              `\n            )}\n            value={debugText}\n            onChange={event => setDebugText(event.currentTarget.value)}\n          />\n        }\n      />\n      {!!debugFields.length && <DebugFields fields={debugFields} />}\n    </div>\n  );\n};\n\ntype DebugFieldItemProps = {\n  fields: DebugField[];\n};\nconst DebugFields = ({ fields }: DebugFieldItemProps) => {\n  return (\n    <table className={'filter-table'}>\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Value</th>\n          <th>Url</th>\n        </tr>\n      </thead>\n      <tbody>\n        {fields.map(field => {\n          let value: any = field.value;\n          if (field.error) {\n            value = field.error.message;\n          } else if (field.href) {\n            value = <a href={field.href}>{value}</a>;\n          }\n          return (\n            <tr key={`${field.name}=${field.value}`}>\n              <td>{field.name}</td>\n              <td>{value}</td>\n              <td>{field.href ? <a href={field.href}>{field.href}</a> : ''}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n\ntype DebugField = {\n  name: string;\n  error?: any;\n  value?: string;\n  href?: string;\n};\n\nfunction makeDebugFields(derivedFields: DerivedFieldConfig[], debugText: string): DebugField[] {\n  return derivedFields\n    .filter(field => field.name && field.matcherRegex)\n    .map(field => {\n      try {\n        const testMatch = debugText.match(field.matcherRegex);\n        const value = testMatch && testMatch[1];\n        let link: LinkModel<Field> | null = null;\n\n        if (field.url && value) {\n          link = getFieldLinksForExplore(\n            {\n              name: '',\n              type: FieldType.string,\n              values: new ArrayVector([value]),\n              config: {\n                links: [{ title: '', url: field.url }],\n              },\n            },\n            0,\n            (() => {}) as any,\n            {} as any\n          )[0];\n        }\n\n        return {\n          name: field.name,\n          value: value || '<no match>',\n          href: link && link.href,\n        } as DebugField;\n      } catch (error) {\n        return {\n          name: field.name,\n          error,\n        } as DebugField;\n      }\n    });\n}\n","import React, { useState } from 'react';\nimport { css } from 'emotion';\nimport { Button, stylesFactory, useTheme } from '@grafana/ui';\nimport { GrafanaTheme, VariableOrigin, DataLinkBuiltInVars } from '@grafana/data';\nimport { DerivedFieldConfig } from '../types';\nimport { DerivedField } from './DerivedField';\nimport { DebugSection } from './DebugSection';\n\nconst getStyles = stylesFactory((theme: GrafanaTheme) => ({\n  infoText: css`\n    padding-bottom: ${theme.spacing.md};\n    color: ${theme.colors.textWeak};\n  `,\n  derivedField: css`\n    margin-bottom: ${theme.spacing.sm};\n  `,\n}));\n\ntype Props = {\n  value?: DerivedFieldConfig[];\n  onChange: (value: DerivedFieldConfig[]) => void;\n};\n\nexport const DerivedFields = (props: Props) => {\n  const { value, onChange } = props;\n  const theme = useTheme();\n  const styles = getStyles(theme);\n\n  const [showDebug, setShowDebug] = useState(false);\n\n  return (\n    <>\n      <h3 className=\"page-heading\">Derived fields</h3>\n\n      <div className={styles.infoText}>\n        Derived fields can be used to extract new fields from the log message and create link from it's value.\n      </div>\n\n      <div className=\"gf-form-group\">\n        {value &&\n          value.map((field, index) => {\n            return (\n              <DerivedField\n                className={styles.derivedField}\n                key={index}\n                value={field}\n                onChange={newField => {\n                  const newDerivedFields = [...value];\n                  newDerivedFields.splice(index, 1, newField);\n                  onChange(newDerivedFields);\n                }}\n                onDelete={() => {\n                  const newDerivedFields = [...value];\n                  newDerivedFields.splice(index, 1);\n                  onChange(newDerivedFields);\n                }}\n                suggestions={[\n                  {\n                    value: DataLinkBuiltInVars.valueRaw,\n                    label: 'Raw value',\n                    documentation: 'Exact string captured by the regular expression',\n                    origin: VariableOrigin.Value,\n                  },\n                ]}\n              />\n            );\n          })}\n        <div>\n          <Button\n            variant=\"secondary\"\n            className={css`\n              margin-right: 10px;\n            `}\n            icon=\"plus\"\n            onClick={event => {\n              event.preventDefault();\n              const newDerivedFields = [...(value || []), { name: '', matcherRegex: '' }];\n              onChange(newDerivedFields);\n            }}\n          >\n            Add\n          </Button>\n\n          {value && value.length > 0 && (\n            <Button variant=\"secondary\" onClick={() => setShowDebug(!showDebug)}>\n              {showDebug ? 'Hide example log message' : 'Show example log message'}\n            </Button>\n          )}\n        </div>\n      </div>\n\n      {showDebug && (\n        <div className=\"gf-form-group\">\n          <DebugSection\n            className={css`\n              margin-bottom: 10px;\n            `}\n            derivedFields={value}\n          />\n        </div>\n      )}\n    </>\n  );\n};\n","import React from 'react';\nimport { DataSourcePluginOptionsEditorProps, DataSourceSettings } from '@grafana/data';\nimport { DataSourceHttpSettings } from '@grafana/ui';\nimport { LokiOptions } from '../types';\nimport { MaxLinesField } from './MaxLinesField';\nimport { DerivedFields } from './DerivedFields';\n\nexport type Props = DataSourcePluginOptionsEditorProps<LokiOptions>;\n\nconst makeJsonUpdater = <T extends any>(field: keyof LokiOptions) => (\n  options: DataSourceSettings<LokiOptions>,\n  value: T\n): DataSourceSettings<LokiOptions> => {\n  return {\n    ...options,\n    jsonData: {\n      ...options.jsonData,\n      [field]: value,\n    },\n  };\n};\n\nconst setMaxLines = makeJsonUpdater('maxLines');\nconst setDerivedFields = makeJsonUpdater('derivedFields');\n\nexport const ConfigEditor = (props: Props) => {\n  const { options, onOptionsChange } = props;\n\n  return (\n    <>\n      <DataSourceHttpSettings\n        defaultUrl={'http://localhost:3100'}\n        dataSourceConfig={options}\n        showAccessOptions={false}\n        onChange={onOptionsChange}\n      />\n\n      <div className=\"gf-form-group\">\n        <div className=\"gf-form-inline\">\n          <div className=\"gf-form\">\n            <MaxLinesField\n              value={options.jsonData.maxLines || ''}\n              onChange={value => onOptionsChange(setMaxLines(options, value))}\n            />\n          </div>\n        </div>\n      </div>\n\n      <DerivedFields\n        value={options.jsonData.derivedFields}\n        onChange={value => onOptionsChange(setDerivedFields(options, value))}\n      />\n    </>\n  );\n};\n","import { DataSourcePlugin } from '@grafana/data';\nimport Datasource from './datasource';\n\nimport LokiCheatSheet from './components/LokiCheatSheet';\nimport LokiExploreQueryEditor from './components/LokiExploreQueryEditor';\nimport LokiQueryEditor from './components/LokiQueryEditor';\nimport { LokiAnnotationsQueryCtrl } from './LokiAnnotationsQueryCtrl';\nimport { ConfigEditor } from './configuration/ConfigEditor';\n\nexport const plugin = new DataSourcePlugin(Datasource)\n  .setQueryEditor(LokiQueryEditor)\n  .setConfigEditor(ConfigEditor)\n  .setExploreQueryField(LokiExploreQueryEditor)\n  .setExploreStartPage(LokiCheatSheet)\n  .setAnnotationQueryCtrl(LokiAnnotationsQueryCtrl);\n","(function() {\n  var base64map\n      = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n\n  crypt = {\n    // Bit-wise rotation left\n    rotl: function(n, b) {\n      return (n << b) | (n >>> (32 - b));\n    },\n\n    // Bit-wise rotation right\n    rotr: function(n, b) {\n      return (n << (32 - b)) | (n >>> b);\n    },\n\n    // Swap big-endian to little-endian and vice versa\n    endian: function(n) {\n      // If number given, swap endian\n      if (n.constructor == Number) {\n        return crypt.rotl(n, 8) & 0x00FF00FF | crypt.rotl(n, 24) & 0xFF00FF00;\n      }\n\n      // Else, assume array and swap all items\n      for (var i = 0; i < n.length; i++)\n        n[i] = crypt.endian(n[i]);\n      return n;\n    },\n\n    // Generate an array of any length of random bytes\n    randomBytes: function(n) {\n      for (var bytes = []; n > 0; n--)\n        bytes.push(Math.floor(Math.random() * 256));\n      return bytes;\n    },\n\n    // Convert a byte array to big-endian 32-bit words\n    bytesToWords: function(bytes) {\n      for (var words = [], i = 0, b = 0; i < bytes.length; i++, b += 8)\n        words[b >>> 5] |= bytes[i] << (24 - b % 32);\n      return words;\n    },\n\n    // Convert big-endian 32-bit words to a byte array\n    wordsToBytes: function(words) {\n      for (var bytes = [], b = 0; b < words.length * 32; b += 8)\n        bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a hex string\n    bytesToHex: function(bytes) {\n      for (var hex = [], i = 0; i < bytes.length; i++) {\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n      }\n      return hex.join('');\n    },\n\n    // Convert a hex string to a byte array\n    hexToBytes: function(hex) {\n      for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n      return bytes;\n    },\n\n    // Convert a byte array to a base-64 string\n    bytesToBase64: function(bytes) {\n      for (var base64 = [], i = 0; i < bytes.length; i += 3) {\n        var triplet = (bytes[i] << 16) | (bytes[i + 1] << 8) | bytes[i + 2];\n        for (var j = 0; j < 4; j++)\n          if (i * 8 + j * 6 <= bytes.length * 8)\n            base64.push(base64map.charAt((triplet >>> 6 * (3 - j)) & 0x3F));\n          else\n            base64.push('=');\n      }\n      return base64.join('');\n    },\n\n    // Convert a base-64 string to a byte array\n    base64ToBytes: function(base64) {\n      // Remove non-base-64 characters\n      base64 = base64.replace(/[^A-Z0-9+\\/]/ig, '');\n\n      for (var bytes = [], i = 0, imod4 = 0; i < base64.length;\n          imod4 = ++i % 4) {\n        if (imod4 == 0) continue;\n        bytes.push(((base64map.indexOf(base64.charAt(i - 1))\n            & (Math.pow(2, -2 * imod4 + 8) - 1)) << (imod4 * 2))\n            | (base64map.indexOf(base64.charAt(i)) >>> (6 - imod4 * 2)));\n      }\n      return bytes;\n    }\n  };\n\n  module.exports = crypt;\n})();\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n","// Libraries\nimport React, { PureComponent } from 'react';\n\n// Components\nimport { Select } from '@grafana/ui';\nimport { SelectableValue, DataSourceSelectItem } from '@grafana/data';\nimport { selectors } from '@grafana/e2e-selectors';\n\nexport interface Props {\n  onChange: (ds: DataSourceSelectItem) => void;\n  datasources: DataSourceSelectItem[];\n  current?: DataSourceSelectItem | null;\n  hideTextValue?: boolean;\n  onBlur?: () => void;\n  autoFocus?: boolean;\n  openMenuOnFocus?: boolean;\n  showLoading?: boolean;\n  placeholder?: string;\n  invalid?: boolean;\n}\n\nexport class DataSourcePicker extends PureComponent<Props> {\n  static defaultProps: Partial<Props> = {\n    autoFocus: false,\n    openMenuOnFocus: false,\n    placeholder: 'Select datasource',\n  };\n\n  searchInput: HTMLElement;\n\n  constructor(props: Props) {\n    super(props);\n  }\n\n  onChange = (item: SelectableValue<string>) => {\n    const ds = this.props.datasources.find(ds => ds.name === item.value);\n\n    if (ds) {\n      this.props.onChange(ds);\n    }\n  };\n\n  render() {\n    const {\n      datasources,\n      current,\n      autoFocus,\n      hideTextValue,\n      onBlur,\n      openMenuOnFocus,\n      showLoading,\n      placeholder,\n      invalid,\n    } = this.props;\n\n    const options = datasources.map(ds => ({\n      value: ds.name,\n      label: ds.name,\n      imgUrl: ds.meta.info.logos.small,\n    }));\n\n    const value = current && {\n      label: current.name.substr(0, 37),\n      value: current.name,\n      imgUrl: current.meta.info.logos.small,\n      loading: showLoading,\n      hideText: hideTextValue,\n    };\n\n    return (\n      <div aria-label={selectors.components.DataSourcePicker.container}>\n        <Select\n          className=\"ds-picker select-container\"\n          isMulti={false}\n          isClearable={false}\n          backspaceRemovesValue={false}\n          onChange={this.onChange}\n          options={options}\n          autoFocus={autoFocus}\n          onBlur={onBlur}\n          openMenuOnFocus={openMenuOnFocus}\n          maxMenuHeight={500}\n          menuPlacement=\"bottom\"\n          placeholder={placeholder}\n          noOptionsMessage=\"No datasources found\"\n          value={value}\n          invalid={invalid}\n        />\n      </div>\n    );\n  }\n}\n\nexport default DataSourcePicker;\n","import { splitOpen } from '../state/actions';\nimport { Field, LinkModel, TimeRange } from '@grafana/data';\nimport { getLinkSrv } from '../../panel/panellinks/link_srv';\nimport { mapInternalLinkToExplore } from '@grafana/data/src/utils/dataLinks';\nimport { getDataSourceSrv, getTemplateSrv } from '@grafana/runtime';\n\n/**\n * Get links from the field of a dataframe and in addition check if there is associated\n * metadata with datasource in which case we will add onClick to open the link in new split window. This assumes\n * that we just supply datasource name and field value and Explore split window will know how to render that\n * appropriately. This is for example used for transition from log with traceId to trace datasource to show that\n * trace.\n */\nexport const getFieldLinksForExplore = (\n  field: Field,\n  rowIndex: number,\n  splitOpenFn: typeof splitOpen,\n  range: TimeRange\n): Array<LinkModel<Field>> => {\n  const scopedVars: any = {};\n  scopedVars['__value'] = {\n    value: {\n      raw: field.values.get(rowIndex),\n    },\n    text: 'Raw value',\n  };\n\n  return field.config.links\n    ? field.config.links.map(link => {\n        if (!link.internal) {\n          const linkModel = getLinkSrv().getDataLinkUIModel(link, scopedVars, field);\n          if (!linkModel.title) {\n            linkModel.title = getTitleFromHref(linkModel.href);\n          }\n          return linkModel;\n        } else {\n          return mapInternalLinkToExplore(link, scopedVars, range, field, {\n            onClickFn: splitOpenFn,\n            replaceVariables: getTemplateSrv().replace.bind(getTemplateSrv()),\n            getDataSourceSettingsByUid: getDataSourceSrv().getDataSourceSettingsByUid.bind(getDataSourceSrv()),\n          });\n        }\n      })\n    : [];\n};\n\nfunction getTitleFromHref(href: string): string {\n  // The URL constructor needs the url to have protocol\n  if (href.indexOf('://') < 0) {\n    // Doesn't really matter what protocol we use.\n    href = `http://${href}`;\n  }\n  let title;\n  try {\n    const parsedUrl = new URL(href);\n    title = parsedUrl.hostname;\n  } catch (_e) {\n    // Should be good enough fallback, user probably did not input valid url.\n    title = href;\n  }\n  return title;\n}\n","(function(){\r\n  var crypt = require('crypt'),\r\n      utf8 = require('charenc').utf8,\r\n      isBuffer = require('is-buffer'),\r\n      bin = require('charenc').bin,\r\n\r\n  // The core\r\n  md5 = function (message, options) {\r\n    // Convert to byte array\r\n    if (message.constructor == String)\r\n      if (options && options.encoding === 'binary')\r\n        message = bin.stringToBytes(message);\r\n      else\r\n        message = utf8.stringToBytes(message);\r\n    else if (isBuffer(message))\r\n      message = Array.prototype.slice.call(message, 0);\r\n    else if (!Array.isArray(message))\r\n      message = message.toString();\r\n    // else, assume byte array already\r\n\r\n    var m = crypt.bytesToWords(message),\r\n        l = message.length * 8,\r\n        a =  1732584193,\r\n        b = -271733879,\r\n        c = -1732584194,\r\n        d =  271733878;\r\n\r\n    // Swap endian\r\n    for (var i = 0; i < m.length; i++) {\r\n      m[i] = ((m[i] <<  8) | (m[i] >>> 24)) & 0x00FF00FF |\r\n             ((m[i] << 24) | (m[i] >>>  8)) & 0xFF00FF00;\r\n    }\r\n\r\n    // Padding\r\n    m[l >>> 5] |= 0x80 << (l % 32);\r\n    m[(((l + 64) >>> 9) << 4) + 14] = l;\r\n\r\n    // Method shortcuts\r\n    var FF = md5._ff,\r\n        GG = md5._gg,\r\n        HH = md5._hh,\r\n        II = md5._ii;\r\n\r\n    for (var i = 0; i < m.length; i += 16) {\r\n\r\n      var aa = a,\r\n          bb = b,\r\n          cc = c,\r\n          dd = d;\r\n\r\n      a = FF(a, b, c, d, m[i+ 0],  7, -680876936);\r\n      d = FF(d, a, b, c, m[i+ 1], 12, -389564586);\r\n      c = FF(c, d, a, b, m[i+ 2], 17,  606105819);\r\n      b = FF(b, c, d, a, m[i+ 3], 22, -1044525330);\r\n      a = FF(a, b, c, d, m[i+ 4],  7, -176418897);\r\n      d = FF(d, a, b, c, m[i+ 5], 12,  1200080426);\r\n      c = FF(c, d, a, b, m[i+ 6], 17, -1473231341);\r\n      b = FF(b, c, d, a, m[i+ 7], 22, -45705983);\r\n      a = FF(a, b, c, d, m[i+ 8],  7,  1770035416);\r\n      d = FF(d, a, b, c, m[i+ 9], 12, -1958414417);\r\n      c = FF(c, d, a, b, m[i+10], 17, -42063);\r\n      b = FF(b, c, d, a, m[i+11], 22, -1990404162);\r\n      a = FF(a, b, c, d, m[i+12],  7,  1804603682);\r\n      d = FF(d, a, b, c, m[i+13], 12, -40341101);\r\n      c = FF(c, d, a, b, m[i+14], 17, -1502002290);\r\n      b = FF(b, c, d, a, m[i+15], 22,  1236535329);\r\n\r\n      a = GG(a, b, c, d, m[i+ 1],  5, -165796510);\r\n      d = GG(d, a, b, c, m[i+ 6],  9, -1069501632);\r\n      c = GG(c, d, a, b, m[i+11], 14,  643717713);\r\n      b = GG(b, c, d, a, m[i+ 0], 20, -373897302);\r\n      a = GG(a, b, c, d, m[i+ 5],  5, -701558691);\r\n      d = GG(d, a, b, c, m[i+10],  9,  38016083);\r\n      c = GG(c, d, a, b, m[i+15], 14, -660478335);\r\n      b = GG(b, c, d, a, m[i+ 4], 20, -405537848);\r\n      a = GG(a, b, c, d, m[i+ 9],  5,  568446438);\r\n      d = GG(d, a, b, c, m[i+14],  9, -1019803690);\r\n      c = GG(c, d, a, b, m[i+ 3], 14, -187363961);\r\n      b = GG(b, c, d, a, m[i+ 8], 20,  1163531501);\r\n      a = GG(a, b, c, d, m[i+13],  5, -1444681467);\r\n      d = GG(d, a, b, c, m[i+ 2],  9, -51403784);\r\n      c = GG(c, d, a, b, m[i+ 7], 14,  1735328473);\r\n      b = GG(b, c, d, a, m[i+12], 20, -1926607734);\r\n\r\n      a = HH(a, b, c, d, m[i+ 5],  4, -378558);\r\n      d = HH(d, a, b, c, m[i+ 8], 11, -2022574463);\r\n      c = HH(c, d, a, b, m[i+11], 16,  1839030562);\r\n      b = HH(b, c, d, a, m[i+14], 23, -35309556);\r\n      a = HH(a, b, c, d, m[i+ 1],  4, -1530992060);\r\n      d = HH(d, a, b, c, m[i+ 4], 11,  1272893353);\r\n      c = HH(c, d, a, b, m[i+ 7], 16, -155497632);\r\n      b = HH(b, c, d, a, m[i+10], 23, -1094730640);\r\n      a = HH(a, b, c, d, m[i+13],  4,  681279174);\r\n      d = HH(d, a, b, c, m[i+ 0], 11, -358537222);\r\n      c = HH(c, d, a, b, m[i+ 3], 16, -722521979);\r\n      b = HH(b, c, d, a, m[i+ 6], 23,  76029189);\r\n      a = HH(a, b, c, d, m[i+ 9],  4, -640364487);\r\n      d = HH(d, a, b, c, m[i+12], 11, -421815835);\r\n      c = HH(c, d, a, b, m[i+15], 16,  530742520);\r\n      b = HH(b, c, d, a, m[i+ 2], 23, -995338651);\r\n\r\n      a = II(a, b, c, d, m[i+ 0],  6, -198630844);\r\n      d = II(d, a, b, c, m[i+ 7], 10,  1126891415);\r\n      c = II(c, d, a, b, m[i+14], 15, -1416354905);\r\n      b = II(b, c, d, a, m[i+ 5], 21, -57434055);\r\n      a = II(a, b, c, d, m[i+12],  6,  1700485571);\r\n      d = II(d, a, b, c, m[i+ 3], 10, -1894986606);\r\n      c = II(c, d, a, b, m[i+10], 15, -1051523);\r\n      b = II(b, c, d, a, m[i+ 1], 21, -2054922799);\r\n      a = II(a, b, c, d, m[i+ 8],  6,  1873313359);\r\n      d = II(d, a, b, c, m[i+15], 10, -30611744);\r\n      c = II(c, d, a, b, m[i+ 6], 15, -1560198380);\r\n      b = II(b, c, d, a, m[i+13], 21,  1309151649);\r\n      a = II(a, b, c, d, m[i+ 4],  6, -145523070);\r\n      d = II(d, a, b, c, m[i+11], 10, -1120210379);\r\n      c = II(c, d, a, b, m[i+ 2], 15,  718787259);\r\n      b = II(b, c, d, a, m[i+ 9], 21, -343485551);\r\n\r\n      a = (a + aa) >>> 0;\r\n      b = (b + bb) >>> 0;\r\n      c = (c + cc) >>> 0;\r\n      d = (d + dd) >>> 0;\r\n    }\r\n\r\n    return crypt.endian([a, b, c, d]);\r\n  };\r\n\r\n  // Auxiliary functions\r\n  md5._ff  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & c | ~b & d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._gg  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b & d | c & ~d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._hh  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (b ^ c ^ d) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n  md5._ii  = function (a, b, c, d, x, s, t) {\r\n    var n = a + (c ^ (b | ~d)) + (x >>> 0) + t;\r\n    return ((n << s) | (n >>> (32 - s))) + b;\r\n  };\r\n\r\n  // Package private blocksize\r\n  md5._blocksize = 16;\r\n  md5._digestsize = 16;\r\n\r\n  module.exports = function (message, options) {\r\n    if (message === undefined || message === null)\r\n      throw new Error('Illegal argument ' + message);\r\n\r\n    var digestbytes = crypt.wordsToBytes(md5(message, options));\r\n    return options && options.asBytes ? digestbytes :\r\n        options && options.asString ? bin.bytesToString(digestbytes) :\r\n        crypt.bytesToHex(digestbytes);\r\n  };\r\n\r\n})();\r\n","var toString = require('./toString');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nmodule.exports = escapeRegExp;\n","var charenc = {\n  // UTF-8 encoding\n  utf8: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      return charenc.bin.stringToBytes(unescape(encodeURIComponent(str)));\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      return decodeURIComponent(escape(charenc.bin.bytesToString(bytes)));\n    }\n  },\n\n  // Binary encoding\n  bin: {\n    // Convert a string to a byte array\n    stringToBytes: function(str) {\n      for (var bytes = [], i = 0; i < str.length; i++)\n        bytes.push(str.charCodeAt(i) & 0xFF);\n      return bytes;\n    },\n\n    // Convert a byte array to a string\n    bytesToString: function(bytes) {\n      for (var str = [], i = 0; i < bytes.length; i++)\n        str.push(String.fromCharCode(bytes[i]));\n      return str.join('');\n    }\n  }\n};\n\nmodule.exports = charenc;\n","import { useEffect, useRef } from 'react';\nvar usePrevious = function (state) {\n    var ref = useRef();\n    useEffect(function () {\n        ref.current = state;\n    });\n    return ref.current;\n};\nexport default usePrevious;\n"],"sourceRoot":""}